var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.363,1,0.871]],["body/components/AppComponent.html",[0,0.471,1,1.251,2,0.946,3,0.316,4,0.316,5,0.815,6,0.815,7,0.815,8,0.265,9,1.646,10,0.815,11,1.212,12,1.212,13,1.954,14,1.726,15,1.212,16,1.071,17,1.071,18,1.212,19,2.926,20,2.473,21,1.251,22,1.251,23,1.251,24,1.251,25,1.251,26,1.562,27,3.025,28,1.373,29,3.025,30,0.265,31,0.637,32,1.279,33,3.613,34,1.373,35,4.001,36,0.946,37,2.033,38,1.817,39,3.613,40,2.065,41,3.613,42,2.364,43,2.926,44,2.065,45,0.76,46,3.025,47,0.56,48,0.049,49,0.76,50,0.55,51,0.56,52,3.025,53,2.033,54,0.923,55,1.788,56,1.201,57,0.37,58,0.316,59,1.417,60,2.364,61,2.071,62,0.791,63,0.815,64,0.265,65,2.033,66,2.033,67,2.033,68,1.071,69,1.392,70,2.033,71,2.926,72,2.033,73,1.646,74,1.392,75,1.201,76,1.049,77,1.646,78,1.071,79,2.033,80,1.646,81,0.316,82,0.173,83,1.373,84,2.033,85,2.45,86,3.025,87,3.025,88,3.025,89,3.025,90,0.815,91,1.212,92,1.212,93,0.815,94,1.603,95,0.815,96,0.815,97,0.815,98,0.815,99,0.815,100,0.815,101,0.636,102,1.212,103,0.72,104,0.815,105,0.815,106,0.815,107,0.815,108,0.026,109,0.026]],["title/components/CheckboxComponent.html",[0,0.363,23,0.871]],["body/components/CheckboxComponent.html",[0,0.453,1,0.595,2,0.9,3,0.295,4,0.295,5,0.762,6,0.762,7,0.762,8,0.248,10,0.762,11,1.153,12,1.153,13,1.919,14,1.696,16,1.019,17,1.371,18,1.153,20,2.377,21,0.595,22,0.595,23,1.368,24,0.595,25,0.595,26,1.486,28,1.307,30,0.248,31,0.606,32,1.205,34,1.307,45,1.008,47,0.956,48,0.049,49,0.875,50,0.631,51,0.956,54,1.888,55,3.035,57,0.704,58,0.758,61,2.377,62,0.539,63,0.762,64,0.248,68,0.674,75,1.124,76,0.982,78,0.674,81,0.295,82,0.162,90,0.762,91,1.153,92,1.153,93,0.762,94,1.551,95,0.762,96,0.762,97,0.762,98,0.762,99,0.762,100,0.762,101,0.595,102,1.153,103,0.674,104,0.762,105,0.762,106,0.762,107,0.762,108,0.025,109,0.025,110,1.541,111,2.331,112,2.812,113,1.97,114,2.331,115,2.812,116,2.331,117,2.331,118,2.879,119,3.472,120,2.879,121,2.879,122,2.812,123,2.812,124,2.812,125,3.135,126,3.871,127,2.331,128,2.331,129,2.331,130,1.903,131,1.903,132,2.331,133,3.542,134,1.903,135,3.135,136,2.331,137,2.331,138,1.903,139,2.331,140,1.903,141,1.903,142,1.903,143,1.903,144,2.331,145,1.903,146,1.124,147,1.541,148,2.331,149,1.541,150,1.541,151,1.541]],["title/injectables/CryptographyService.html",[152,0.506,153,1.646]],["body/injectables/CryptographyService.html",[3,0.37,4,0.37,8,0.311,15,0.956,30,0.311,31,0.716,32,1.398,34,1.543,36,1.238,45,1.05,47,0.657,48,0.049,49,0.502,50,0.785,51,0.657,54,1.959,55,2.009,57,0.785,58,0.67,60,2.55,62,0.37,64,0.311,81,0.37,82,0.203,83,2.389,108,0.029,109,0.029,152,0.618,153,2.009,154,0.956,155,1.933,156,3.96,157,3.96,158,3.96,159,3.96,160,4.316,161,4.316,162,2.34,163,3.4,164,3.4,165,2.386,166,2.386,167,3.042,168,3.4,169,3.4,170,3.4,171,3.4,172,3.4,173,3.4,174,2.386,175,2.34,176,3.4,177,2.386,178,3.4,179,2.386,180,1.238,181,3.4,182,2.386,183,1.083,184,2.386,185,1.933,186,1.933,187,2.386,188,1.933,189,2.386,190,1.933,191,1.933,192,1.634,193,3.4,194,0.956,195,2.386,196,1.41,197,2.386,198,1.362,199,2.386,200,2.386,201,3.4,202,2.386,203,2.386]],["title/classes/PasswordCharset.html",[82,0.237,204,1.646]],["body/classes/PasswordCharset.html",[3,0.473,4,0.473,8,0.397,30,0.397,31,0.846,32,1.473,36,1.257,45,1.047,47,0.839,48,0.048,49,1.047,50,0.87,51,0.839,56,3.124,57,0.554,58,0.793,62,0.624,64,0.397,81,0.473,82,0.259,108,0.034,109,0.034,144,3.254,146,1.799,162,3.161,204,2.375,205,3.045,206,3.496,207,2.466,208,4.498,209,4.973,210,3.045,211,2.567,212,4.019,213,3.045,214,3.045,215,3.045,216,3.045]],["title/components/PasswordComponent.html",[0,0.363,21,0.871]],["body/components/PasswordComponent.html",[0,0.425,1,0.537,2,0.832,3,0.266,4,0.266,5,0.688,6,0.688,7,0.688,8,0.224,10,0.688,11,1.066,12,1.066,13,1.862,14,1.646,16,0.942,17,1.153,18,1.066,21,1.147,22,0.537,23,0.537,24,0.537,25,0.537,26,1.373,28,1.208,30,0.224,31,0.56,32,1.386,34,1.208,36,0.832,43,2.154,44,1.894,45,0.922,47,0.473,48,0.049,49,0.686,50,0.484,51,0.473,54,0.779,56,1.014,57,0.722,58,0.751,59,1.603,62,0.616,63,0.688,64,0.224,68,0.608,73,1.39,76,0.886,77,1.39,78,0.608,81,0.266,82,0.146,83,1.666,90,0.688,91,1.066,92,1.066,93,0.688,94,1.47,95,0.688,96,0.688,97,0.688,98,0.688,99,0.688,100,0.688,101,1.147,102,1.066,103,1.153,104,0.688,105,0.688,106,0.688,107,0.688,108,0.023,109,0.023,175,1.014,180,0.537,186,1.39,194,1.066,196,1.014,198,1.066,217,1.39,218,3.257,219,2.66,220,2.66,221,3.257,222,3.257,223,3.257,224,3.257,225,3.257,226,3.669,227,1.717,228,3.257,229,3.669,230,2.66,231,1.717,232,2.66,233,2.66,234,1.717,235,2.638,236,2.261,237,2.66,238,1.717,239,3.669,240,1.717,241,2.66,242,1.717,243,2.154,244,1.175,245,1.717,246,1.717,247,1.717,248,2.638,249,1.717,250,1.39,251,1.717,252,1.717,253,1.717,254,2.66,255,1.717,256,1.717,257,1.717,258,1.717,259,1.717,260,2.66,261,2.66,262,1.717,263,1.717,264,1.717,265,1.717,266,3.669,267,2.66,268,1.717,269,1.717,270,1.717,271,1.717,272,1.717,273,1.39,274,1.717,275,1.717,276,1.717,277,1.717,278,1.717,279,1.717,280,1.717,281,1.717,282,2.66]],["title/injectables/PasswordConfigService.html",[38,1.264,152,0.506]],["body/injectables/PasswordConfigService.html",[3,0.344,4,0.344,8,0.289,15,0.887,30,0.289,31,0.678,32,1.429,36,1.187,38,1.462,45,0.932,48,0.049,50,0.586,57,0.758,58,0.647,59,1.14,60,1.903,62,0.589,64,0.289,81,0.344,82,0.189,108,0.028,109,0.028,133,1.793,146,1.308,152,0.586,154,0.887,167,2.243,175,2.889,180,1.007,183,1.005,185,1.793,192,1.515,194,1.959,198,0.887,204,1.308,211,2.152,243,3.074,283,2.386,284,1.793,285,3.796,286,3.796,287,3.796,288,3.164,289,2.214,290,3.221,291,2.214,292,2.214,293,3.221,294,3.221,295,4.888,296,2.608,297,4.169,298,3.221,299,3.221,300,2.608,301,3.221,302,3.221,303,3.221,304,3.221,305,3.221,306,2.608,307,2.214,308,3.221,309,2.214,310,2.214,311,1.793,312,2.214,313,3.221,314,3.796,315,2.214,316,2.214,317,2.214,318,2.214,319,2.608,320,3.221,321,2.214,322,3.221,323,3.221,324,3.221,325,2.214,326,2.214,327,3.221,328,2.214,329,3.221,330,2.214,331,3.221,332,2.214,333,2.214]],["title/injectables/PasswordEntropyService.html",[40,1.437,152,0.506]],["body/injectables/PasswordEntropyService.html",[3,0.423,4,0.423,8,0.356,15,1.093,30,0.356,31,0.786,32,0.751,36,1.167,38,2.077,40,1.926,45,0.786,47,0.751,48,0.049,49,0.574,50,0.496,51,0.751,57,0.496,58,0.423,59,1.62,62,0.579,64,0.356,74,1.867,81,0.423,82,0.232,83,1.238,108,0.032,109,0.032,152,0.679,154,1.093,162,2.514,180,1.612,183,1.238,194,1.833,198,1.833,211,1.926,236,2.196,283,2.196,288,3.386,334,2.208,335,4.254,336,2.727,337,2.727,338,3.732,339,3.732,340,4.574,341,3.732,342,3.022,343,3.022,344,3.732,345,3.022,346,3.732,347,3.732,348,2.727,349,3.022,350,3.445,351,3.022,352,2.208,353,2.208]],["title/injectables/PasswordGenerationService.html",[42,1.646,152,0.506]],["body/injectables/PasswordGenerationService.html",[3,0.335,4,0.335,8,0.282,15,0.866,30,0.282,31,0.666,32,1.337,34,1.436,36,0.989,38,1.871,42,1.869,45,0.997,47,1.135,48,0.049,49,0.867,50,0.749,51,1.135,54,1.871,56,3.08,57,0.575,58,0.491,59,1.459,60,1.869,62,0.581,64,0.282,74,1.479,81,0.335,82,0.184,83,2.204,108,0.027,109,0.027,152,0.575,153,2.435,154,0.866,167,1.869,180,0.989,183,0.981,194,1.651,198,0.866,211,2.264,236,2.264,283,2.506,288,2.562,342,2.562,343,3.337,345,3.711,354,1.749,355,4.121,356,4.121,357,3.164,358,3.164,359,3.164,360,4.121,361,2.16,362,3.743,363,2.16,364,3.164,365,2.16,366,2.16,367,2.16,368,2.16,369,2.16,370,2.16,371,2.16,372,3.164,373,3.164,374,4.121,375,2.16,376,3.164,377,2.16,378,2.16,379,2.16,380,2.16,381,2.16,382,3.164,383,2.16]],["title/injectables/PasswordService.html",[44,1.437,152,0.506]],["body/injectables/PasswordService.html",[3,0.594,4,0.594,8,0.499,15,1.534,30,0.499,31,0.978,32,1.378,44,2.399,45,0.806,48,0.048,57,0.696,58,0.808,62,0.594,64,0.499,81,0.594,82,0.326,108,0.04,109,0.04,152,0.845,154,1.534,183,1.739,384,3.101,385,5.003,386,3.829]],["title/injectables/PasswordStrengthService.html",[152,0.506,387,1.646]],["body/injectables/PasswordStrengthService.html",[3,0.475,4,0.475,8,0.399,15,1.227,30,0.399,31,0.849,36,0.958,40,2.329,45,0.849,47,0.843,48,0.049,49,0.645,50,0.557,51,0.843,57,0.557,58,0.475,59,1.698,62,0.7,64,0.399,68,1.428,80,2.48,81,0.475,82,0.261,108,0.035,109,0.035,152,0.734,154,1.227,162,2.666,180,1.261,183,1.39,194,1.616,198,1.616,236,2.329,283,2.329,311,2.48,349,3.267,350,4.337,351,3.267,352,2.48,353,2.48,387,2.384,388,2.48,389,3.282,390,3.062,391,3.062,392,3.062,393,4.034,394,4.034,395,3.062,396,4.034,397,3.062]],["title/components/SliderComponent.html",[0,0.363,22,0.871]],["body/components/SliderComponent.html",[0,0.423,1,0.533,2,0.828,3,0.265,4,0.265,5,0.684,6,0.684,7,0.684,8,0.222,10,0.684,11,1.061,12,1.061,13,1.859,14,1.643,16,0.937,17,1.295,18,1.061,20,2.221,21,0.533,22,1.31,23,0.533,24,0.533,25,0.533,26,1.366,28,1.202,30,0.222,31,0.557,34,1.202,45,1.046,47,0.893,48,0.049,49,0.833,50,0.665,51,0.893,54,1.797,55,2.969,57,0.762,58,0.788,61,2.221,62,0.411,63,0.684,64,0.222,68,0.604,75,1.008,78,0.604,81,0.265,82,0.145,90,0.684,91,1.061,92,1.061,93,0.684,94,1.465,95,0.684,96,0.684,97,0.684,98,0.684,99,0.684,100,0.684,101,0.533,102,1.061,103,0.604,104,0.684,105,0.684,106,0.684,107,0.684,108,0.023,109,0.023,111,2.144,112,2.627,113,1.812,114,2.144,115,2.627,116,2.144,117,2.144,122,2.627,123,2.627,124,2.627,125,2.961,127,2.144,128,2.144,129,2.144,132,2.144,135,2.961,136,2.144,137,2.144,139,2.144,146,1.008,147,1.381,148,2.144,149,1.381,150,1.381,151,1.381,167,2.669,180,0.533,194,0.684,198,0.684,248,2.144,319,1.381,398,1.381,399,2.144,400,2.647,401,2.647,402,3.244,403,3.244,404,3.656,405,2.647,406,3.244,407,3.244,408,2.647,409,3.244,410,2.647,411,1.706,412,1.706,413,1.706,414,1.706,415,1.706,416,1.706,417,3.656,418,3.656,419,3.958,420,1.706,421,1.706,422,1.706,423,1.706,424,2.647,425,1.706,426,1.706,427,1.706,428,1.706,429,1.706,430,1.706,431,1.706]],["title/components/StrengthMeterComponent.html",[0,0.363,24,0.871]],["body/components/StrengthMeterComponent.html",[0,0.483,1,0.663,2,0.976,3,0.329,4,0.329,5,0.85,6,0.85,7,0.85,8,0.277,10,0.85,11,1.251,12,1.251,13,1.976,14,1.746,16,1.106,17,1.106,18,1.251,19,3,21,0.663,22,0.663,23,0.663,24,1.277,25,0.663,26,1.612,28,1.417,30,0.277,31,0.657,32,1.431,36,0.976,45,0.917,47,0.584,48,0.049,49,0.78,50,0.568,51,0.584,57,0.743,58,0.634,59,1.106,62,0.575,63,0.85,64,0.277,68,1.746,69,3.117,71,1.718,76,1.095,78,0.751,81,0.329,82,0.181,83,0.963,90,0.85,91,1.251,92,1.251,93,0.85,94,1.637,95,0.85,96,0.85,97,0.85,98,0.85,99,0.85,100,0.85,101,0.663,102,1.251,103,0.751,104,0.85,105,0.85,106,0.85,107,0.85,108,0.027,109,0.027,180,0.976,236,2.248,387,2.414,389,2.536,432,3.688,433,1.718,434,3.122,435,3.122,436,3.122,437,3.704,438,4.354,439,3.704,440,2.122,441,2.122,442,3.122,443,3.122,444,3.122,445,2.122,446,3.122,447,2.122,448,3.122,449,2.122,450,4.085,451,3.122,452,3.122,453,2.122,454,2.122]],["title/components/SvgCopyIconComponent.html",[0,0.363,101,0.871]],["body/components/SvgCopyIconComponent.html",[0,0.582,1,0.936,2,1.243,3,0.465,4,0.465,5,1.592,6,1.2,7,1.2,8,0.39,10,1.2,11,1.592,12,1.592,13,2.136,14,1.888,16,1.407,17,1.407,18,1.2,21,0.936,22,0.936,23,0.936,24,0.936,25,0.936,28,1.804,48,0.048,49,0.837,62,0.465,63,1.2,64,0.39,68,1.06,78,1.06,81,0.465,82,0.255,90,1.2,91,1.592,92,1.592,93,1.2,94,1.904,95,1.2,96,1.2,97,1.2,98,1.2,99,1.2,100,1.2,101,1.486,102,2.037,103,1.837,104,1.2,105,1.2,106,1.2,107,1.2,108,0.034,109,0.034,244,2.049,455,2.049,456,2.424,457,3.974,458,3.974]],["title/components/SvgRightArrowComponent.html",[0,0.363,25,0.871]],["body/components/SvgRightArrowComponent.html",[0,0.59,1,0.963,2,1.266,3,0.478,4,0.478,5,1.623,6,1.234,7,1.234,8,0.402,10,1.234,11,1.623,12,1.623,13,2.148,14,1.898,16,1.434,17,1.434,18,1.234,21,0.963,22,0.963,23,0.963,24,0.963,25,1.503,48,0.048,49,0.852,62,0.478,63,1.234,64,0.402,68,1.091,78,1.702,81,0.478,82,0.262,90,1.234,91,1.623,92,1.623,93,1.234,94,1.925,95,1.234,96,1.234,97,1.234,98,1.234,99,1.234,100,1.234,101,0.963,102,1.925,103,1.091,104,1.234,105,1.813,106,1.234,107,1.234,108,0.035,109,0.035,455,2.108,459,2.494]],["title/coverage.html",[460,3.065]],["body/coverage.html",[0,0.673,1,0.916,8,0.382,9,2.371,21,0.916,22,0.916,23,0.916,24,0.916,25,0.916,38,1.329,40,1.512,42,1.73,44,1.512,48,0.048,50,0.533,69,2.004,78,1.037,82,0.25,101,0.916,103,1.387,108,0.034,109,0.034,110,2.371,152,0.919,153,1.73,155,2.371,175,1.73,180,1.73,204,1.73,206,2.004,207,2.371,217,2.371,244,2.004,283,2.431,284,2.371,334,2.371,354,2.371,384,2.371,387,1.73,388,2.371,398,2.371,432,2.371,433,2.371,455,2.68,456,2.371,459,2.371,460,2.371,461,2.928,462,2.928,463,2.928,464,2.928,465,2.371,466,4.412,467,2.371,468,4.909,469,2.928,470,3.916,471,2.928,472,4.412,473,3.916,474,3.916,475,2.928,476,2.928,477,2.371,478,3.171,479,2.371,480,2.928,481,2.928]],["title/dependencies.html",[482,2.333,483,2.709]],["body/dependencies.html",[48,0.049,64,0.501,75,2.271,76,1.984,108,0.04,109,0.04,188,3.771,250,3.112,483,3.112,484,5.536,485,3.843,486,4.657,487,3.843,488,3.843,489,3.843,490,3.843,491,3.843,492,3.843,493,3.843,494,3.843]],["title/miscellaneous/enumerations.html",[495,1.379,496,2.709]],["body/miscellaneous/enumerations.html",[30,0.505,48,0.047,58,0.811,108,0.04,109,0.04,206,2.65,211,2.414,296,3.135,300,3.135,306,3.135,389,3.202,495,2.287,496,3.135,497,3.871,498,3.871,499,4.677,500,3.871,501,4.677,502,3.871,503,3.871,504,3.871,505,3.871,506,3.871,507,3.871,508,3.871,509,3.871]],["title/index.html",[30,0.304,510,2.333,511,2.333]],["body/index.html",[2,1.051,14,1.517,16,1.19,48,0.043,59,1.517,85,3.469,108,0.037,109,0.037,190,2.721,191,2.721,192,2.933,196,1.986,273,2.721,399,2.721,512,4.967,513,4.967,514,4.284,515,3.361,516,3.361,517,3.361,518,3.361,519,3.361,520,3.361,521,3.361,522,3.361,523,3.361,524,3.361,525,3.361,526,3.361,527,3.361,528,3.361,529,3.361,530,3.361,531,3.361,532,3.361,533,3.361,534,4.284,535,3.361,536,4.284,537,3.361,538,3.361,539,3.361,540,3.361,541,3.361,542,3.361,543,3.361,544,3.361,545,3.361,546,3.361,547,3.361,548,3.361,549,3.361,550,3.361,551,3.361,552,3.361,553,3.361,554,3.361,555,3.361,556,3.361,557,3.361,558,3.361,559,3.361,560,3.361,561,3.361,562,3.361]],["title/modules.html",[563,3.065]],["body/modules.html",[48,0.043,108,0.043,109,0.043,563,3.574]],["title/overview.html",[564,3.065]],["body/overview.html",[2,1.347,48,0.043,82,0.367,108,0.043,109,0.043,154,1.726,196,2.545,564,3.488,565,4.307,566,4.307]],["title/miscellaneous/variables.html",[495,1.379,567,2.709]],["body/miscellaneous/variables.html",[17,1.309,30,0.482,48,0.049,50,0.896,57,0.896,58,0.765,108,0.039,109,0.039,113,2.531,235,2.994,465,2.994,467,3.683,477,2.994,478,4.162,479,2.994,495,2.185,567,2.994,568,3.697,569,3.697,570,3.697,571,3.697,572,3.697,573,3.697,574,4.548,575,4.548]]],"invertedIndex":[["",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"injectables/CryptographyService.html":{},"classes/PasswordCharset.html":{},"components/PasswordComponent.html":{},"injectables/PasswordConfigService.html":{},"injectables/PasswordEntropyService.html":{},"injectables/PasswordGenerationService.html":{},"injectables/PasswordService.html":{},"injectables/PasswordStrengthService.html":{},"components/SliderComponent.html":{},"components/StrengthMeterComponent.html":{},"components/SvgCopyIconComponent.html":{},"components/SvgRightArrowComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":180,"title":{},"body":{"injectables/CryptographyService.html":{},"components/PasswordComponent.html":{},"injectables/PasswordConfigService.html":{},"injectables/PasswordEntropyService.html":{},"injectables/PasswordGenerationService.html":{},"injectables/PasswordStrengthService.html":{},"components/SliderComponent.html":{},"components/StrengthMeterComponent.html":{},"coverage.html":{}}}],["0.14.3",{"_index":494,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":468,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":469,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":476,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":475,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":464,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":472,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":470,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":471,"title":{},"body":{"coverage.html":{}}}],["0123456789",{"_index":503,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["1",{"_index":196,"title":{},"body":{"injectables/CryptographyService.html":{},"components/PasswordComponent.html":{},"index.html":{},"overview.html":{}}}],["1/3",{"_index":474,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":431,"title":{},"body":{"components/SliderComponent.html":{}}}],["1024",{"_index":178,"title":{},"body":{"injectables/CryptographyService.html":{}}}],["17",{"_index":519,"title":{},"body":{"index.html":{}}}],["17.3.0",{"_index":484,"title":{},"body":{"dependencies.html":{}}}],["2.3.0",{"_index":492,"title":{},"body":{"dependencies.html":{}}}],["2024",{"_index":560,"title":{},"body":{"index.html":{}}}],["255",{"_index":181,"title":{},"body":{"injectables/CryptographyService.html":{}}}],["33",{"_index":473,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":566,"title":{},"body":{"overview.html":{}}}],["64",{"_index":290,"title":{},"body":{"injectables/PasswordConfigService.html":{}}}],["7",{"_index":565,"title":{},"body":{"overview.html":{}}}],["7.8.0",{"_index":490,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":170,"title":{},"body":{"injectables/CryptographyService.html":{}}}],["_",{"_index":504,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["_changedetectorref",{"_index":228,"title":{},"body":{"components/PasswordComponent.html":{}}}],["_config",{"_index":338,"title":{},"body":{"injectables/PasswordEntropyService.html":{}}}],["_crypto",{"_index":364,"title":{},"body":{"injectables/PasswordGenerationService.html":{}}}],["_entropy",{"_index":392,"title":{},"body":{"injectables/PasswordStrengthService.html":{}}}],["_generator",{"_index":41,"title":{},"body":{"components/AppComponent.html":{}}}],["_password",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"components/PasswordComponent.html":{}}}],["_pwdconfig",{"_index":362,"title":{},"body":{"injectables/PasswordGenerationService.html":{}}}],["_strengthservice",{"_index":442,"title":{},"body":{"components/StrengthMeterComponent.html":{}}}],["_value",{"_index":147,"title":{},"body":{"components/CheckboxComponent.html":{},"components/SliderComponent.html":{}}}],["abcdefghijklmnopqrstuvwxyz",{"_index":501,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["acc",{"_index":345,"title":{},"body":{"injectables/PasswordEntropyService.html":{},"injectables/PasswordGenerationService.html":{}}}],["accessors",{"_index":408,"title":{},"body":{"components/SliderComponent.html":{}}}],["actions",{"_index":535,"title":{},"body":{"index.html":{}}}],["actual_component",{"_index":107,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"components/PasswordComponent.html":{},"components/SliderComponent.html":{},"components/StrengthMeterComponent.html":{},"components/SvgCopyIconComponent.html":{},"components/SvgRightArrowComponent.html":{}}}],["alert(message",{"_index":277,"title":{},"body":{"components/PasswordComponent.html":{}}}],["analysis",{"_index":539,"title":{},"body":{"index.html":{}}}],["angular",{"_index":518,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":250,"title":{},"body":{"components/PasswordComponent.html":{},"dependencies.html":{}}}],["angular/common",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"components/PasswordComponent.html":{},"components/StrengthMeterComponent.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":485,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"injectables/CryptographyService.html":{},"classes/PasswordCharset.html":{},"components/PasswordComponent.html":{},"injectables/PasswordConfigService.html":{},"injectables/PasswordEntropyService.html":{},"injectables/PasswordGenerationService.html":{},"injectables/PasswordService.html":{},"injectables/PasswordStrengthService.html":{},"components/SliderComponent.html":{},"components/StrengthMeterComponent.html":{},"components/SvgCopyIconComponent.html":{},"components/SvgRightArrowComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"components/SliderComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":486,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":488,"title":{},"body":{"dependencies.html":{}}}],["animate",{"_index":249,"title":{},"body":{"components/PasswordComponent.html":{}}}],["animate('400ms",{"_index":255,"title":{},"body":{"components/PasswordComponent.html":{}}}],["animations",{"_index":251,"title":{},"body":{"components/PasswordComponent.html":{}}}],["api",{"_index":192,"title":{},"body":{"injectables/CryptographyService.html":{},"injectables/PasswordConfigService.html":{},"index.html":{}}}],["app",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"components/PasswordComponent.html":{},"components/SliderComponent.html":{},"components/StrengthMeterComponent.html":{},"components/SvgCopyIconComponent.html":{},"components/SvgRightArrowComponent.html":{},"index.html":{}}}],["app.component.html",{"_index":27,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":29,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"components/PasswordComponent.html":{},"components/SliderComponent.html":{},"components/StrengthMeterComponent.html":{},"components/SvgCopyIconComponent.html":{},"components/SvgRightArrowComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":467,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["applicationconfig",{"_index":571,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ariavaluetext",{"_index":437,"title":{},"body":{"components/StrengthMeterComponent.html":{}}}],["arrow",{"_index":105,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"components/PasswordComponent.html":{},"components/SliderComponent.html":{},"components/StrengthMeterComponent.html":{},"components/SvgCopyIconComponent.html":{},"components/SvgRightArrowComponent.html":{}}}],["arrow.component",{"_index":79,"title":{},"body":{"components/AppComponent.html":{}}}],["arrow.component.ts",{"_index":459,"title":{},"body":{"components/SvgRightArrowComponent.html":{},"coverage.html":{}}}],["async",{"_index":225,"title":{},"body":{"components/PasswordComponent.html":{}}}],["automation",{"_index":531,"title":{},"body":{"index.html":{}}}],["await",{"_index":263,"title":{},"body":{"components/PasswordComponent.html":{}}}],["bash",{"_index":530,"title":{},"body":{"index.html":{}}}],["bit",{"_index":171,"title":{},"body":{"injectables/CryptographyService.html":{}}}],["bits",{"_index":351,"title":{},"body":{"injectables/PasswordEntropyService.html":{},"injectables/PasswordStrengthService.html":{}}}],["boolean",{"_index":133,"title":{},"body":{"components/CheckboxComponent.html":{},"injectables/PasswordConfigService.html":{}}}],["browser",{"_index":188,"title":{},"body":{"injectables/CryptographyService.html":{},"dependencies.html":{}}}],["buffer",{"_index":156,"title":{},"body":{"injectables/CryptographyService.html":{}}}],["buffer_size",{"_index":157,"title":{},"body":{"injectables/CryptographyService.html":{}}}],["bufferindex",{"_index":158,"title":{},"body":{"injectables/CryptographyService.html":{}}}],["building",{"_index":556,"title":{},"body":{"index.html":{}}}],["catch",{"_index":265,"title":{},"body":{"components/PasswordComponent.html":{}}}],["cause",{"_index":281,"title":{},"body":{"components/PasswordComponent.html":{}}}],["challenge",{"_index":515,"title":{},"body":{"index.html":{}}}],["challenges",{"_index":551,"title":{},"body":{"index.html":{}}}],["change",{"_index":323,"title":{},"body":{"injectables/PasswordConfigService.html":{}}}],["changedetection",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"components/PasswordComponent.html":{},"components/SliderComponent.html":{},"components/StrengthMeterComponent.html":{},"components/SvgCopyIconComponent.html":{},"components/SvgRightArrowComponent.html":{}}}],["changedetectionstrategy",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"components/PasswordComponent.html":{},"components/SliderComponent.html":{},"components/StrengthMeterComponent.html":{},"components/SvgCopyIconComponent.html":{},"components/SvgRightArrowComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"components/PasswordComponent.html":{},"components/SliderComponent.html":{},"components/StrengthMeterComponent.html":{},"components/SvgCopyIconComponent.html":{},"components/SvgRightArrowComponent.html":{}}}],["changedetectorref",{"_index":229,"title":{},"body":{"components/PasswordComponent.html":{}}}],["changes",{"_index":259,"title":{},"body":{"components/PasswordComponent.html":{}}}],["character",{"_index":86,"title":{},"body":{"components/AppComponent.html":{}}}],["charset",{"_index":211,"title":{},"body":{"classes/PasswordCharset.html":{},"injectables/PasswordConfigService.html":{},"injectables/PasswordEntropyService.html":{},"injectables/PasswordGenerationService.html":{},"miscellaneous/enumerations.html":{}}}],["charset.class",{"_index":312,"title":{},"body":{"injectables/PasswordConfigService.html":{}}}],["charset.class.ts",{"_index":207,"title":{},"body":{"classes/PasswordCharset.html":{},"coverage.html":{}}}],["charset.class.ts:10",{"_index":213,"title":{},"body":{"classes/PasswordCharset.html":{}}}],["charset.class.ts:5",{"_index":212,"title":{},"body":{"classes/PasswordCharset.html":{}}}],["charset.class.ts:8",{"_index":214,"title":{},"body":{"classes/PasswordCharset.html":{}}}],["charset.class.ts:9",{"_index":215,"title":{},"body":{"classes/PasswordCharset.html":{}}}],["charset.digits",{"_index":302,"title":{},"body":{"injectables/PasswordConfigService.html":{}}}],["charset.enum",{"_index":216,"title":{},"body":{"classes/PasswordCharset.html":{}}}],["charset.isincluded",{"_index":343,"title":{},"body":{"injectables/PasswordEntropyService.html":{},"injectables/PasswordGenerationService.html":{}}}],["charset.isincluded.set(json.parse(ischarsetincluded",{"_index":332,"title":{},"body":{"injectables/PasswordConfigService.html":{}}}],["charset.label",{"_index":88,"title":{},"body":{"components/AppComponent.html":{}}}],["charset.lowercase",{"_index":299,"title":{},"body":{"injectables/PasswordConfigService.html":{}}}],["charset.name",{"_index":328,"title":{},"body":{"injectables/PasswordConfigService.html":{}}}],["charset.symbols",{"_index":305,"title":{},"body":{"injectables/PasswordConfigService.html":{}}}],["charset.uppercase",{"_index":294,"title":{},"body":{"injectables/PasswordConfigService.html":{}}}],["charset.value",{"_index":374,"title":{},"body":{"injectables/PasswordGenerationService.html":{}}}],["charset.value.length",{"_index":346,"title":{},"body":{"injectables/PasswordEntropyService.html":{}}}],["charsetkey",{"_index":327,"title":{},"body":{"injectables/PasswordConfigService.html":{}}}],["charsetsize",{"_index":340,"title":{},"body":{"injectables/PasswordEntropyService.html":{}}}],["checkbox",{"_index":118,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["checkbox'},{'name",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"components/PasswordComponent.html":{},"components/SliderComponent.html":{},"components/StrengthMeterComponent.html":{},"components/SvgCopyIconComponent.html":{},"components/SvgRightArrowComponent.html":{}}}],["checkbox.component.html",{"_index":120,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["checkbox.component.scss",{"_index":121,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["checkbox/checkbox.component",{"_index":67,"title":{},"body":{"components/AppComponent.html":{}}}],["checkboxcomponent",{"_index":23,"title":{"components/CheckboxComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"components/PasswordComponent.html":{},"components/SliderComponent.html":{},"components/StrengthMeterComponent.html":{},"components/SvgCopyIconComponent.html":{},"components/SvgRightArrowComponent.html":{},"coverage.html":{}}}],["checkboxes",{"_index":525,"title":{},"body":{"index.html":{}}}],["class",{"_index":82,"title":{"classes/PasswordCharset.html":{}},"body":{"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"injectables/CryptographyService.html":{},"classes/PasswordCharset.html":{},"components/PasswordComponent.html":{},"injectables/PasswordConfigService.html":{},"injectables/PasswordEntropyService.html":{},"injectables/PasswordGenerationService.html":{},"injectables/PasswordService.html":{},"injectables/PasswordStrengthService.html":{},"components/SliderComponent.html":{},"components/StrengthMeterComponent.html":{},"components/SvgCopyIconComponent.html":{},"components/SvgRightArrowComponent.html":{},"coverage.html":{},"overview.html":{}}}],["classes",{"_index":205,"title":{},"body":{"classes/PasswordCharset.html":{}}}],["clipboard",{"_index":273,"title":{},"body":{"components/PasswordComponent.html":{},"index.html":{}}}],["code",{"_index":543,"title":{},"body":{"index.html":{}}}],["codeql",{"_index":538,"title":{},"body":{"index.html":{}}}],["coding",{"_index":554,"title":{},"body":{"index.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"components/PasswordComponent.html":{},"components/SliderComponent.html":{},"components/StrengthMeterComponent.html":{},"components/SvgCopyIconComponent.html":{},"components/SvgRightArrowComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"components/PasswordComponent.html":{},"components/SliderComponent.html":{},"components/StrengthMeterComponent.html":{},"components/SvgCopyIconComponent.html":{},"components/SvgRightArrowComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"components/PasswordComponent.html":{},"components/SliderComponent.html":{},"components/StrengthMeterComponent.html":{},"components/SvgCopyIconComponent.html":{},"components/SvgRightArrowComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"components/PasswordComponent.html":{},"components/SliderComponent.html":{},"components/StrengthMeterComponent.html":{},"components/SvgCopyIconComponent.html":{},"components/SvgRightArrowComponent.html":{},"index.html":{},"overview.html":{}}}],["compute",{"_index":349,"title":{},"body":{"injectables/PasswordEntropyService.html":{},"injectables/PasswordStrengthService.html":{}}}],["computed",{"_index":236,"title":{},"body":{"components/PasswordComponent.html":{},"injectables/PasswordEntropyService.html":{},"injectables/PasswordGenerationService.html":{},"injectables/PasswordStrengthService.html":{},"components/StrengthMeterComponent.html":{}}}],["config",{"_index":52,"title":{},"body":{"components/AppComponent.html":{}}}],["config.pwdlength",{"_index":87,"title":{},"body":{"components/AppComponent.html":{}}}],["config.service",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"injectables/PasswordEntropyService.html":{},"injectables/PasswordGenerationService.html":{}}}],["config.service.ts",{"_index":284,"title":{},"body":{"injectables/PasswordConfigService.html":{},"coverage.html":{}}}],["config.service.ts:10",{"_index":291,"title":{},"body":{"injectables/PasswordConfigService.html":{}}}],["config.service.ts:11",{"_index":309,"title":{},"body":{"injectables/PasswordConfigService.html":{}}}],["config.service.ts:13",{"_index":307,"title":{},"body":{"injectables/PasswordConfigService.html":{}}}],["config.service.ts:18",{"_index":289,"title":{},"body":{"injectables/PasswordConfigService.html":{}}}],["config.service.ts:9",{"_index":292,"title":{},"body":{"injectables/PasswordConfigService.html":{}}}],["console.error('local",{"_index":316,"title":{},"body":{"injectables/PasswordConfigService.html":{}}}],["const",{"_index":194,"title":{},"body":{"injectables/CryptographyService.html":{},"components/PasswordComponent.html":{},"injectables/PasswordConfigService.html":{},"injectables/PasswordEntropyService.html":{},"injectables/PasswordGenerationService.html":{},"injectables/PasswordStrengthService.html":{},"components/SliderComponent.html":{}}}],["constructor",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"injectables/CryptographyService.html":{},"classes/PasswordCharset.html":{},"components/PasswordComponent.html":{},"injectables/PasswordConfigService.html":{},"injectables/PasswordEntropyService.html":{},"injectables/PasswordGenerationService.html":{},"injectables/PasswordStrengthService.html":{},"components/StrengthMeterComponent.html":{}}}],["constructor(_config",{"_index":336,"title":{},"body":{"injectables/PasswordEntropyService.html":{}}}],["constructor(_crypto",{"_index":361,"title":{},"body":{"injectables/PasswordGenerationService.html":{}}}],["constructor(_entropy",{"_index":390,"title":{},"body":{"injectables/PasswordStrengthService.html":{}}}],["constructor(_password",{"_index":227,"title":{},"body":{"components/PasswordComponent.html":{}}}],["constructor(_strengthservice",{"_index":440,"title":{},"body":{"components/StrengthMeterComponent.html":{}}}],["constructor(config",{"_index":37,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(name",{"_index":210,"title":{},"body":{"classes/PasswordCharset.html":{}}}],["controls",{"_index":524,"title":{},"body":{"index.html":{}}}],["controlvalueaccessor",{"_index":112,"title":{},"body":{"components/CheckboxComponent.html":{},"components/SliderComponent.html":{}}}],["copied",{"_index":282,"title":{},"body":{"components/PasswordComponent.html":{}}}],["copilot",{"_index":545,"title":{},"body":{"index.html":{}}}],["copy",{"_index":103,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"components/PasswordComponent.html":{},"components/SliderComponent.html":{},"components/StrengthMeterComponent.html":{},"components/SvgCopyIconComponent.html":{},"components/SvgRightArrowComponent.html":{},"coverage.html":{}}}],["copypassword",{"_index":226,"title":{},"body":{"components/PasswordComponent.html":{}}}],["copyright",{"_index":559,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":460,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cryptography",{"_index":191,"title":{},"body":{"injectables/CryptographyService.html":{},"index.html":{}}}],["cryptography.service",{"_index":378,"title":{},"body":{"injectables/PasswordGenerationService.html":{}}}],["cryptographyservice",{"_index":153,"title":{"injectables/CryptographyService.html":{}},"body":{"injectables/CryptographyService.html":{},"injectables/PasswordGenerationService.html":{},"coverage.html":{}}}],["custom",{"_index":523,"title":{},"body":{"index.html":{}}}],["default",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"injectables/CryptographyService.html":{},"classes/PasswordCharset.html":{},"components/PasswordComponent.html":{},"injectables/PasswordConfigService.html":{},"injectables/PasswordEntropyService.html":{},"injectables/PasswordGenerationService.html":{},"injectables/PasswordService.html":{},"injectables/PasswordStrengthService.html":{},"components/SliderComponent.html":{},"components/StrengthMeterComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"injectables/CryptographyService.html":{},"classes/PasswordCharset.html":{},"components/PasswordComponent.html":{},"injectables/PasswordConfigService.html":{},"injectables/PasswordEntropyService.html":{},"injectables/PasswordGenerationService.html":{},"injectables/PasswordService.html":{},"injectables/PasswordStrengthService.html":{},"components/SliderComponent.html":{},"components/StrengthMeterComponent.html":{}}}],["denied",{"_index":276,"title":{},"body":{"components/PasswordComponent.html":{}}}],["dependencies",{"_index":483,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["deployments",{"_index":537,"title":{},"body":{"index.html":{}}}],["deserialize",{"_index":320,"title":{},"body":{"injectables/PasswordConfigService.html":{}}}],["detect",{"_index":258,"title":{},"body":{"components/PasswordComponent.html":{}}}],["developer",{"_index":540,"title":{},"body":{"index.html":{}}}],["digits",{"_index":502,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["directive",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"components/PasswordComponent.html":{},"components/SliderComponent.html":{},"components/StrengthMeterComponent.html":{},"components/SvgCopyIconComponent.html":{},"components/SvgRightArrowComponent.html":{}}}],["directives",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"components/PasswordComponent.html":{},"components/SliderComponent.html":{},"components/StrengthMeterComponent.html":{},"components/SvgCopyIconComponent.html":{},"components/SvgRightArrowComponent.html":{}}}],["documentation",{"_index":461,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"components/PasswordComponent.html":{},"components/SliderComponent.html":{},"components/StrengthMeterComponent.html":{},"components/SvgCopyIconComponent.html":{},"components/SvgRightArrowComponent.html":{}}}],["domexception",{"_index":270,"title":{},"body":{"components/PasswordComponent.html":{}}}],["dynamic",{"_index":487,"title":{},"body":{"dependencies.html":{}}}],["ease",{"_index":256,"title":{},"body":{"components/PasswordComponent.html":{}}}],["effect",{"_index":243,"title":{},"body":{"components/PasswordComponent.html":{},"injectables/PasswordConfigService.html":{}}}],["element",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"components/PasswordComponent.html":{},"components/SliderComponent.html":{},"components/StrengthMeterComponent.html":{},"components/SvgCopyIconComponent.html":{},"components/SvgRightArrowComponent.html":{}}}],["entropy",{"_index":350,"title":{},"body":{"injectables/PasswordEntropyService.html":{},"injectables/PasswordStrengthService.html":{}}}],["entropy.service",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"injectables/PasswordStrengthService.html":{}}}],["entropy.service.ts",{"_index":334,"title":{},"body":{"injectables/PasswordEntropyService.html":{},"coverage.html":{}}}],["entropy.service.ts:12",{"_index":348,"title":{},"body":{"injectables/PasswordEntropyService.html":{}}}],["entropy.service.ts:20",{"_index":337,"title":{},"body":{"injectables/PasswordEntropyService.html":{}}}],["entropyservice",{"_index":39,"title":{},"body":{"components/AppComponent.html":{}}}],["enumerations",{"_index":496,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":478,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["error",{"_index":266,"title":{},"body":{"components/PasswordComponent.html":{}}}],["error('your",{"_index":187,"title":{},"body":{"injectables/CryptographyService.html":{}}}],["error(message",{"_index":280,"title":{},"body":{"components/PasswordComponent.html":{}}}],["error.name",{"_index":271,"title":{},"body":{"components/PasswordComponent.html":{}}}],["export",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"injectables/CryptographyService.html":{},"classes/PasswordCharset.html":{},"components/PasswordComponent.html":{},"injectables/PasswordConfigService.html":{},"injectables/PasswordEntropyService.html":{},"injectables/PasswordGenerationService.html":{},"injectables/PasswordService.html":{},"injectables/PasswordStrengthService.html":{},"components/SliderComponent.html":{},"components/StrengthMeterComponent.html":{},"components/SvgCopyIconComponent.html":{},"components/SvgRightArrowComponent.html":{}}}],["false",{"_index":235,"title":{},"body":{"components/PasswordComponent.html":{},"miscellaneous/variables.html":{}}}],["features",{"_index":522,"title":{},"body":{"index.html":{}}}],["figma",{"_index":544,"title":{},"body":{"index.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"injectables/CryptographyService.html":{},"classes/PasswordCharset.html":{},"components/PasswordComponent.html":{},"injectables/PasswordConfigService.html":{},"injectables/PasswordEntropyService.html":{},"injectables/PasswordGenerationService.html":{},"injectables/PasswordService.html":{},"injectables/PasswordStrengthService.html":{},"components/SliderComponent.html":{},"components/StrengthMeterComponent.html":{},"components/SvgCopyIconComponent.html":{},"components/SvgRightArrowComponent.html":{},"coverage.html":{}}}],["fillbuffer",{"_index":160,"title":{},"body":{"injectables/CryptographyService.html":{}}}],["filter(charset",{"_index":342,"title":{},"body":{"injectables/PasswordEntropyService.html":{},"injectables/PasswordGenerationService.html":{}}}],["fn",{"_index":135,"title":{},"body":{"components/CheckboxComponent.html":{},"components/SliderComponent.html":{}}}],["formsmodule",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"components/SliderComponent.html":{}}}],["frontend",{"_index":512,"title":{},"body":{"index.html":{}}}],["function",{"_index":136,"title":{},"body":{"components/CheckboxComponent.html":{},"components/SliderComponent.html":{}}}],["generate",{"_index":89,"title":{},"body":{"components/AppComponent.html":{}}}],["generatepassword",{"_index":35,"title":{},"body":{"components/AppComponent.html":{}}}],["generation.service",{"_index":72,"title":{},"body":{"components/AppComponent.html":{}}}],["generation.service.ts",{"_index":354,"title":{},"body":{"injectables/PasswordGenerationService.html":{},"coverage.html":{}}}],["generation.service.ts:15",{"_index":377,"title":{},"body":{"injectables/PasswordGenerationService.html":{}}}],["generation.service.ts:19",{"_index":363,"title":{},"body":{"injectables/PasswordGenerationService.html":{}}}],["generation.service.ts:26",{"_index":371,"title":{},"body":{"injectables/PasswordGenerationService.html":{}}}],["generation.service.ts:49",{"_index":366,"title":{},"body":{"injectables/PasswordGenerationService.html":{}}}],["generation.service.ts:53",{"_index":368,"title":{},"body":{"injectables/PasswordGenerationService.html":{}}}],["generation.service.ts:62",{"_index":370,"title":{},"body":{"injectables/PasswordGenerationService.html":{}}}],["generation.service.ts:9",{"_index":375,"title":{},"body":{"injectables/PasswordGenerationService.html":{}}}],["generator",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["getprogresspercentage",{"_index":426,"title":{},"body":{"components/SliderComponent.html":{}}}],["getrandombyte",{"_index":161,"title":{},"body":{"injectables/CryptographyService.html":{}}}],["getrandomchar",{"_index":357,"title":{},"body":{"injectables/PasswordGenerationService.html":{}}}],["getrandomchar(charset",{"_index":365,"title":{},"body":{"injectables/PasswordGenerationService.html":{}}}],["getrandomindex",{"_index":163,"title":{},"body":{"injectables/CryptographyService.html":{}}}],["getrandomindex(length",{"_index":173,"title":{},"body":{"injectables/CryptographyService.html":{}}}],["getrandomstring",{"_index":358,"title":{},"body":{"injectables/PasswordGenerationService.html":{}}}],["getrandomstring(charset",{"_index":367,"title":{},"body":{"injectables/PasswordGenerationService.html":{}}}],["getting",{"_index":510,"title":{"index.html":{}},"body":{}}],["github",{"_index":534,"title":{},"body":{"index.html":{}}}],["gérard",{"_index":562,"title":{},"body":{"index.html":{}}}],["help",{"_index":552,"title":{},"body":{"index.html":{}}}],["hostbinding",{"_index":427,"title":{},"body":{"components/SliderComponent.html":{}}}],["hostbinding('style",{"_index":428,"title":{},"body":{"components/SliderComponent.html":{}}}],["hostbindings",{"_index":405,"title":{},"body":{"components/SliderComponent.html":{}}}],["hosted",{"_index":548,"title":{},"body":{"index.html":{}}}],["html",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"components/PasswordComponent.html":{},"components/SliderComponent.html":{},"components/StrengthMeterComponent.html":{},"components/SvgCopyIconComponent.html":{},"components/SvgRightArrowComponent.html":{}}}],["https://nordvpn.com/blog/what",{"_index":353,"title":{},"body":{"injectables/PasswordEntropyService.html":{},"injectables/PasswordStrengthService.html":{}}}],["icon",{"_index":457,"title":{},"body":{"components/SvgCopyIconComponent.html":{}}}],["icon'},{'name",{"_index":104,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"components/PasswordComponent.html":{},"components/SliderComponent.html":{},"components/StrengthMeterComponent.html":{},"components/SvgCopyIconComponent.html":{},"components/SvgRightArrowComponent.html":{}}}],["icon.component",{"_index":245,"title":{},"body":{"components/PasswordComponent.html":{}}}],["icon.component.scss",{"_index":458,"title":{},"body":{"components/SvgCopyIconComponent.html":{}}}],["icon.component.ts",{"_index":456,"title":{},"body":{"components/SvgCopyIconComponent.html":{},"coverage.html":{}}}],["icon/svg",{"_index":244,"title":{},"body":{"components/PasswordComponent.html":{},"components/SvgCopyIconComponent.html":{},"coverage.html":{}}}],["identifier",{"_index":462,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":111,"title":{},"body":{"components/CheckboxComponent.html":{},"components/SliderComponent.html":{}}}],["import",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"injectables/CryptographyService.html":{},"classes/PasswordCharset.html":{},"components/PasswordComponent.html":{},"injectables/PasswordConfigService.html":{},"injectables/PasswordEntropyService.html":{},"injectables/PasswordGenerationService.html":{},"injectables/PasswordService.html":{},"injectables/PasswordStrengthService.html":{},"components/SliderComponent.html":{},"components/StrengthMeterComponent.html":{},"components/SvgCopyIconComponent.html":{},"components/SvgRightArrowComponent.html":{}}}],["imports",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"components/PasswordComponent.html":{},"components/SliderComponent.html":{},"components/StrengthMeterComponent.html":{},"components/SvgCopyIconComponent.html":{},"components/SvgRightArrowComponent.html":{}}}],["improve",{"_index":553,"title":{},"body":{"index.html":{}}}],["include",{"_index":295,"title":{},"body":{"injectables/PasswordConfigService.html":{}}}],["includedcharsets",{"_index":355,"title":{},"body":{"injectables/PasswordGenerationService.html":{}}}],["includedcharsets.length",{"_index":383,"title":{},"body":{"injectables/PasswordGenerationService.html":{}}}],["includedcharsetscount",{"_index":382,"title":{},"body":{"injectables/PasswordGenerationService.html":{}}}],["index",{"_index":30,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"injectables/CryptographyService.html":{},"classes/PasswordCharset.html":{},"components/PasswordComponent.html":{},"injectables/PasswordConfigService.html":{},"injectables/PasswordEntropyService.html":{},"injectables/PasswordGenerationService.html":{},"injectables/PasswordService.html":{},"injectables/PasswordStrengthService.html":{},"components/SliderComponent.html":{},"components/StrengthMeterComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"injectables/CryptographyService.html":{},"classes/PasswordCharset.html":{},"components/PasswordComponent.html":{},"injectables/PasswordConfigService.html":{},"injectables/PasswordEntropyService.html":{},"injectables/PasswordGenerationService.html":{},"injectables/PasswordService.html":{},"injectables/PasswordStrengthService.html":{},"components/SliderComponent.html":{},"components/StrengthMeterComponent.html":{},"components/SvgCopyIconComponent.html":{},"components/SvgRightArrowComponent.html":{}}}],["injectable",{"_index":152,"title":{"injectables/CryptographyService.html":{},"injectables/PasswordConfigService.html":{},"injectables/PasswordEntropyService.html":{},"injectables/PasswordGenerationService.html":{},"injectables/PasswordService.html":{},"injectables/PasswordStrengthService.html":{}},"body":{"injectables/CryptographyService.html":{},"injectables/PasswordConfigService.html":{},"injectables/PasswordEntropyService.html":{},"injectables/PasswordGenerationService.html":{},"injectables/PasswordService.html":{},"injectables/PasswordStrengthService.html":{},"coverage.html":{}}}],["injectables",{"_index":154,"title":{},"body":{"injectables/CryptographyService.html":{},"injectables/PasswordConfigService.html":{},"injectables/PasswordEntropyService.html":{},"injectables/PasswordGenerationService.html":{},"injectables/PasswordService.html":{},"injectables/PasswordStrengthService.html":{},"overview.html":{}}}],["input",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"components/SliderComponent.html":{}}}],["input.required",{"_index":417,"title":{},"body":{"components/SliderComponent.html":{}}}],["insertrandomchar",{"_index":359,"title":{},"body":{"injectables/PasswordGenerationService.html":{}}}],["insertrandomchar(charset",{"_index":369,"title":{},"body":{"injectables/PasswordGenerationService.html":{}}}],["instanceof",{"_index":269,"title":{},"body":{"components/PasswordComponent.html":{}}}],["integer",{"_index":172,"title":{},"body":{"injectables/CryptographyService.html":{}}}],["integration",{"_index":527,"title":{},"body":{"index.html":{}}}],["ischarsetincluded",{"_index":329,"title":{},"body":{"injectables/PasswordConfigService.html":{}}}],["iscopied",{"_index":222,"title":{},"body":{"components/PasswordComponent.html":{}}}],["iscopydisabled",{"_index":223,"title":{},"body":{"components/PasswordComponent.html":{}}}],["isincluded",{"_index":208,"title":{},"body":{"classes/PasswordCharset.html":{}}}],["isplaceholder",{"_index":224,"title":{},"body":{"components/PasswordComponent.html":{}}}],["isvalidinput",{"_index":195,"title":{},"body":{"injectables/CryptographyService.html":{}}}],["jasmine",{"_index":529,"title":{},"body":{"index.html":{}}}],["johnny",{"_index":561,"title":{},"body":{"index.html":{}}}],["json.stringify(charset.isincluded",{"_index":333,"title":{},"body":{"injectables/PasswordConfigService.html":{}}}],["json.stringify(this.pwdlength",{"_index":325,"title":{},"body":{"injectables/PasswordConfigService.html":{}}}],["label",{"_index":209,"title":{},"body":{"classes/PasswordCharset.html":{}}}],["labelid",{"_index":122,"title":{},"body":{"components/CheckboxComponent.html":{},"components/SliderComponent.html":{}}}],["legend",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"components/PasswordComponent.html":{},"components/SliderComponent.html":{},"components/StrengthMeterComponent.html":{},"components/SvgCopyIconComponent.html":{},"components/SvgRightArrowComponent.html":{}}}],["length",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"injectables/CryptographyService.html":{},"injectables/PasswordConfigService.html":{},"injectables/PasswordGenerationService.html":{}}}],["letters",{"_index":297,"title":{},"body":{"injectables/PasswordConfigService.html":{}}}],["level",{"_index":396,"title":{},"body":{"injectables/PasswordStrengthService.html":{}}}],["level_0",{"_index":505,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["level_1",{"_index":506,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["level_2",{"_index":507,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["level_3",{"_index":508,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["level_4",{"_index":509,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["link",{"_index":352,"title":{},"body":{"injectables/PasswordEntropyService.html":{},"injectables/PasswordStrengthService.html":{}}}],["links",{"_index":546,"title":{},"body":{"index.html":{}}}],["lowercase",{"_index":300,"title":{},"body":{"injectables/PasswordConfigService.html":{},"miscellaneous/enumerations.html":{}}}],["main",{"_index":521,"title":{},"body":{"index.html":{}}}],["makepassword",{"_index":360,"title":{},"body":{"injectables/PasswordGenerationService.html":{}}}],["map(charset",{"_index":373,"title":{},"body":{"injectables/PasswordGenerationService.html":{}}}],["matching",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"injectables/CryptographyService.html":{},"classes/PasswordCharset.html":{},"components/PasswordComponent.html":{},"injectables/PasswordConfigService.html":{},"injectables/PasswordEntropyService.html":{},"injectables/PasswordGenerationService.html":{},"injectables/PasswordService.html":{},"injectables/PasswordStrengthService.html":{},"components/SliderComponent.html":{},"components/StrengthMeterComponent.html":{},"components/SvgCopyIconComponent.html":{},"components/SvgRightArrowComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["math.log2(charsetsize",{"_index":347,"title":{},"body":{"injectables/PasswordEntropyService.html":{}}}],["max",{"_index":402,"title":{},"body":{"components/SliderComponent.html":{}}}],["max_byte",{"_index":159,"title":{},"body":{"injectables/CryptographyService.html":{}}}],["medium",{"_index":451,"title":{},"body":{"components/StrengthMeterComponent.html":{}}}],["mentor",{"_index":513,"title":{},"body":{"index.html":{}}}],["message",{"_index":267,"title":{},"body":{"components/PasswordComponent.html":{}}}],["metadata",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"components/PasswordComponent.html":{},"components/SliderComponent.html":{},"components/StrengthMeterComponent.html":{},"components/SvgCopyIconComponent.html":{},"components/SvgRightArrowComponent.html":{}}}],["meter",{"_index":434,"title":{},"body":{"components/StrengthMeterComponent.html":{}}}],["meter'},{'name",{"_index":100,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"components/PasswordComponent.html":{},"components/SliderComponent.html":{},"components/StrengthMeterComponent.html":{},"components/SvgCopyIconComponent.html":{},"components/SvgRightArrowComponent.html":{}}}],["meter.component",{"_index":70,"title":{},"body":{"components/AppComponent.html":{}}}],["meter.component.html",{"_index":435,"title":{},"body":{"components/StrengthMeterComponent.html":{}}}],["meter.component.scss",{"_index":436,"title":{},"body":{"components/StrengthMeterComponent.html":{}}}],["meter.component.ts",{"_index":433,"title":{},"body":{"components/StrengthMeterComponent.html":{},"coverage.html":{}}}],["meter.component.ts:16",{"_index":445,"title":{},"body":{"components/StrengthMeterComponent.html":{}}}],["meter.component.ts:19",{"_index":447,"title":{},"body":{"components/StrengthMeterComponent.html":{}}}],["meter.component.ts:20",{"_index":449,"title":{},"body":{"components/StrengthMeterComponent.html":{}}}],["meter.component.ts:21",{"_index":453,"title":{},"body":{"components/StrengthMeterComponent.html":{}}}],["meter.component.ts:27",{"_index":441,"title":{},"body":{"components/StrengthMeterComponent.html":{}}}],["meter/strength",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"components/StrengthMeterComponent.html":{},"coverage.html":{}}}],["methods",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"injectables/CryptographyService.html":{},"components/PasswordComponent.html":{},"injectables/PasswordGenerationService.html":{},"components/SliderComponent.html":{}}}],["min",{"_index":403,"title":{},"body":{"components/SliderComponent.html":{}}}],["miscellaneous",{"_index":495,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["mobile",{"_index":550,"title":{},"body":{"index.html":{}}}],["model",{"_index":146,"title":{},"body":{"components/CheckboxComponent.html":{},"classes/PasswordCharset.html":{},"injectables/PasswordConfigService.html":{},"components/SliderComponent.html":{}}}],["model(0",{"_index":308,"title":{},"body":{"injectables/PasswordConfigService.html":{}}}],["model(false",{"_index":144,"title":{},"body":{"components/CheckboxComponent.html":{},"classes/PasswordCharset.html":{}}}],["model(null",{"_index":424,"title":{},"body":{"components/SliderComponent.html":{}}}],["modules",{"_index":563,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["multi",{"_index":117,"title":{},"body":{"components/CheckboxComponent.html":{},"components/SliderComponent.html":{}}}],["name",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"injectables/CryptographyService.html":{},"classes/PasswordCharset.html":{},"components/PasswordComponent.html":{},"injectables/PasswordEntropyService.html":{},"injectables/PasswordGenerationService.html":{},"injectables/PasswordStrengthService.html":{},"components/SliderComponent.html":{},"components/StrengthMeterComponent.html":{},"components/SvgCopyIconComponent.html":{},"components/SvgRightArrowComponent.html":{}}}],["new",{"_index":175,"title":{},"body":{"injectables/CryptographyService.html":{},"components/PasswordComponent.html":{},"injectables/PasswordConfigService.html":{},"coverage.html":{}}}],["ng_value_accessor",{"_index":115,"title":{},"body":{"components/CheckboxComponent.html":{},"components/SliderComponent.html":{}}}],["ngfor",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"components/StrengthMeterComponent.html":{}}}],["ngif",{"_index":218,"title":{},"body":{"components/PasswordComponent.html":{}}}],["ngtemplateoutlet",{"_index":119,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["notallowederror",{"_index":272,"title":{},"body":{"components/PasswordComponent.html":{}}}],["notify",{"_index":278,"title":{},"body":{"components/PasswordComponent.html":{}}}],["null",{"_index":319,"title":{},"body":{"injectables/PasswordConfigService.html":{},"components/SliderComponent.html":{}}}],["number",{"_index":167,"title":{},"body":{"injectables/CryptographyService.html":{},"injectables/PasswordConfigService.html":{},"injectables/PasswordGenerationService.html":{},"components/SliderComponent.html":{}}}],["numberattribute",{"_index":419,"title":{},"body":{"components/SliderComponent.html":{}}}],["numbers",{"_index":303,"title":{},"body":{"injectables/PasswordConfigService.html":{}}}],["object",{"_index":574,"title":{},"body":{"miscellaneous/variables.html":{}}}],["onblur",{"_index":125,"title":{},"body":{"components/CheckboxComponent.html":{},"components/SliderComponent.html":{}}}],["onchange",{"_index":123,"title":{},"body":{"components/CheckboxComponent.html":{},"components/SliderComponent.html":{}}}],["oninput",{"_index":404,"title":{},"body":{"components/SliderComponent.html":{}}}],["ontouched",{"_index":124,"title":{},"body":{"components/CheckboxComponent.html":{},"components/SliderComponent.html":{}}}],["onvaluechange",{"_index":126,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["opacity",{"_index":254,"title":{},"body":{"components/PasswordComponent.html":{}}}],["optional",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"injectables/CryptographyService.html":{},"classes/PasswordCharset.html":{},"components/PasswordComponent.html":{},"injectables/PasswordEntropyService.html":{},"injectables/PasswordGenerationService.html":{},"injectables/PasswordStrengthService.html":{},"components/SliderComponent.html":{},"components/StrengthMeterComponent.html":{}}}],["overview",{"_index":564,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p4$5w0rd",{"_index":233,"title":{},"body":{"components/PasswordComponent.html":{}}}],["package",{"_index":482,"title":{"dependencies.html":{}},"body":{}}],["parameters",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"injectables/CryptographyService.html":{},"classes/PasswordCharset.html":{},"components/PasswordComponent.html":{},"injectables/PasswordEntropyService.html":{},"injectables/PasswordGenerationService.html":{},"injectables/PasswordStrengthService.html":{},"components/SliderComponent.html":{},"components/StrengthMeterComponent.html":{}}}],["password",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"components/PasswordComponent.html":{},"injectables/PasswordConfigService.html":{},"injectables/PasswordEntropyService.html":{},"injectables/PasswordGenerationService.html":{},"injectables/PasswordStrengthService.html":{},"components/StrengthMeterComponent.html":{},"index.html":{}}}],["password'},{'name",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"components/PasswordComponent.html":{},"components/SliderComponent.html":{},"components/StrengthMeterComponent.html":{},"components/SvgCopyIconComponent.html":{},"components/SvgRightArrowComponent.html":{}}}],["password.component.html",{"_index":219,"title":{},"body":{"components/PasswordComponent.html":{}}}],["password.component.scss",{"_index":220,"title":{},"body":{"components/PasswordComponent.html":{}}}],["password/password.component",{"_index":65,"title":{},"body":{"components/AppComponent.html":{}}}],["password_length_input",{"_index":33,"title":{},"body":{"components/AppComponent.html":{}}}],["passwordcharset",{"_index":204,"title":{"classes/PasswordCharset.html":{}},"body":{"classes/PasswordCharset.html":{},"injectables/PasswordConfigService.html":{},"coverage.html":{}}}],["passwordcharset('digits",{"_index":301,"title":{},"body":{"injectables/PasswordConfigService.html":{}}}],["passwordcharset('lowercase",{"_index":298,"title":{},"body":{"injectables/PasswordConfigService.html":{}}}],["passwordcharset('symbols",{"_index":304,"title":{},"body":{"injectables/PasswordConfigService.html":{}}}],["passwordcharset('uppercase",{"_index":293,"title":{},"body":{"injectables/PasswordConfigService.html":{}}}],["passwordcomponent",{"_index":21,"title":{"components/PasswordComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"components/PasswordComponent.html":{},"components/SliderComponent.html":{},"components/StrengthMeterComponent.html":{},"components/SvgCopyIconComponent.html":{},"components/SvgRightArrowComponent.html":{},"coverage.html":{}}}],["passwordconfigservice",{"_index":38,"title":{"injectables/PasswordConfigService.html":{}},"body":{"components/AppComponent.html":{},"injectables/PasswordConfigService.html":{},"injectables/PasswordEntropyService.html":{},"injectables/PasswordGenerationService.html":{},"coverage.html":{}}}],["passwordentropy",{"_index":335,"title":{},"body":{"injectables/PasswordEntropyService.html":{}}}],["passwordentropyservice",{"_index":40,"title":{"injectables/PasswordEntropyService.html":{}},"body":{"components/AppComponent.html":{},"injectables/PasswordEntropyService.html":{},"injectables/PasswordStrengthService.html":{},"coverage.html":{}}}],["passwordgenerationservice",{"_index":42,"title":{"injectables/PasswordGenerationService.html":{}},"body":{"components/AppComponent.html":{},"injectables/PasswordGenerationService.html":{},"coverage.html":{}}}],["passwordservice",{"_index":44,"title":{"injectables/PasswordService.html":{}},"body":{"components/AppComponent.html":{},"components/PasswordComponent.html":{},"injectables/PasswordService.html":{},"coverage.html":{}}}],["passwordstrength",{"_index":389,"title":{},"body":{"injectables/PasswordStrengthService.html":{},"components/StrengthMeterComponent.html":{},"miscellaneous/enumerations.html":{}}}],["passwordstrength.level_0",{"_index":394,"title":{},"body":{"injectables/PasswordStrengthService.html":{}}}],["passwordstrengthservice",{"_index":387,"title":{"injectables/PasswordStrengthService.html":{}},"body":{"injectables/PasswordStrengthService.html":{},"components/StrengthMeterComponent.html":{},"coverage.html":{}}}],["percentage",{"_index":407,"title":{},"body":{"components/SliderComponent.html":{}}}],["permission",{"_index":275,"title":{},"body":{"components/PasswordComponent.html":{}}}],["placeholder",{"_index":221,"title":{},"body":{"components/PasswordComponent.html":{}}}],["pr",{"_index":533,"title":{},"body":{"index.html":{}}}],["private",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"injectables/CryptographyService.html":{},"components/PasswordComponent.html":{},"injectables/PasswordEntropyService.html":{},"injectables/PasswordGenerationService.html":{},"components/StrengthMeterComponent.html":{}}}],["production",{"_index":575,"title":{},"body":{"miscellaneous/variables.html":{}}}],["progress",{"_index":406,"title":{},"body":{"components/SliderComponent.html":{}}}],["progresspercentage",{"_index":409,"title":{},"body":{"components/SliderComponent.html":{}}}],["projects",{"_index":558,"title":{},"body":{"index.html":{}}}],["promise",{"_index":232,"title":{},"body":{"components/PasswordComponent.html":{}}}],["properties",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"injectables/CryptographyService.html":{},"classes/PasswordCharset.html":{},"components/PasswordComponent.html":{},"injectables/PasswordConfigService.html":{},"injectables/PasswordEntropyService.html":{},"injectables/PasswordGenerationService.html":{},"injectables/PasswordService.html":{},"injectables/PasswordStrengthService.html":{},"components/SliderComponent.html":{},"components/StrengthMeterComponent.html":{}}}],["provide",{"_index":114,"title":{},"body":{"components/CheckboxComponent.html":{},"components/SliderComponent.html":{}}}],["provideanimations",{"_index":573,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providedin",{"_index":183,"title":{},"body":{"injectables/CryptographyService.html":{},"injectables/PasswordConfigService.html":{},"injectables/PasswordEntropyService.html":{},"injectables/PasswordGenerationService.html":{},"injectables/PasswordService.html":{},"injectables/PasswordStrengthService.html":{}}}],["providerouter(routes",{"_index":572,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":113,"title":{},"body":{"components/CheckboxComponent.html":{},"components/SliderComponent.html":{},"miscellaneous/variables.html":{}}}],["public",{"_index":162,"title":{},"body":{"injectables/CryptographyService.html":{},"classes/PasswordCharset.html":{},"injectables/PasswordEntropyService.html":{},"injectables/PasswordStrengthService.html":{}}}],["pwd_length_key",{"_index":313,"title":{},"body":{"injectables/PasswordConfigService.html":{}}}],["pwd_max_length",{"_index":285,"title":{},"body":{"injectables/PasswordConfigService.html":{}}}],["pwd_min_length",{"_index":286,"title":{},"body":{"injectables/PasswordConfigService.html":{}}}],["pwdcharset",{"_index":356,"title":{},"body":{"injectables/PasswordGenerationService.html":{}}}],["pwdcharsets",{"_index":287,"title":{},"body":{"injectables/PasswordConfigService.html":{}}}],["pwdlength",{"_index":288,"title":{},"body":{"injectables/PasswordConfigService.html":{},"injectables/PasswordEntropyService.html":{},"injectables/PasswordGenerationService.html":{}}}],["random",{"_index":168,"title":{},"body":{"injectables/CryptographyService.html":{}}}],["readonly",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"injectables/CryptographyService.html":{},"classes/PasswordCharset.html":{},"components/PasswordComponent.html":{},"injectables/PasswordConfigService.html":{},"injectables/PasswordEntropyService.html":{},"injectables/PasswordGenerationService.html":{},"injectables/PasswordService.html":{},"components/StrengthMeterComponent.html":{}}}],["realistic",{"_index":557,"title":{},"body":{"index.html":{}}}],["reduce((acc",{"_index":344,"title":{},"body":{"injectables/PasswordEntropyService.html":{}}}],["registeronchange",{"_index":127,"title":{},"body":{"components/CheckboxComponent.html":{},"components/SliderComponent.html":{}}}],["registeronchange(fn",{"_index":132,"title":{},"body":{"components/CheckboxComponent.html":{},"components/SliderComponent.html":{}}}],["registerontouched",{"_index":128,"title":{},"body":{"components/CheckboxComponent.html":{},"components/SliderComponent.html":{}}}],["registerontouched(fn",{"_index":137,"title":{},"body":{"components/CheckboxComponent.html":{},"components/SliderComponent.html":{}}}],["results",{"_index":108,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"injectables/CryptographyService.html":{},"classes/PasswordCharset.html":{},"components/PasswordComponent.html":{},"injectables/PasswordConfigService.html":{},"injectables/PasswordEntropyService.html":{},"injectables/PasswordGenerationService.html":{},"injectables/PasswordService.html":{},"injectables/PasswordStrengthService.html":{},"components/SliderComponent.html":{},"components/StrengthMeterComponent.html":{},"components/SvgCopyIconComponent.html":{},"components/SvgRightArrowComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":198,"title":{},"body":{"injectables/CryptographyService.html":{},"components/PasswordComponent.html":{},"injectables/PasswordConfigService.html":{},"injectables/PasswordEntropyService.html":{},"injectables/PasswordGenerationService.html":{},"injectables/PasswordStrengthService.html":{},"components/SliderComponent.html":{}}}],["returns",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"injectables/CryptographyService.html":{},"components/PasswordComponent.html":{},"injectables/PasswordGenerationService.html":{},"components/SliderComponent.html":{}}}],["right",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"components/PasswordComponent.html":{},"components/SliderComponent.html":{},"components/StrengthMeterComponent.html":{},"components/SvgCopyIconComponent.html":{},"components/SvgRightArrowComponent.html":{},"coverage.html":{}}}],["root",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"injectables/CryptographyService.html":{},"injectables/PasswordConfigService.html":{},"injectables/PasswordEntropyService.html":{},"injectables/PasswordGenerationService.html":{},"injectables/PasswordService.html":{},"injectables/PasswordStrengthService.html":{}}}],["root'},{'name",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"components/PasswordComponent.html":{},"components/SliderComponent.html":{},"components/StrengthMeterComponent.html":{},"components/SvgCopyIconComponent.html":{},"components/SvgRightArrowComponent.html":{}}}],["rxjs",{"_index":489,"title":{},"body":{"dependencies.html":{}}}],["sampledbyte",{"_index":199,"title":{},"body":{"injectables/CryptographyService.html":{}}}],["sass",{"_index":520,"title":{},"body":{"index.html":{}}}],["screenshots",{"_index":549,"title":{},"body":{"index.html":{}}}],["see",{"_index":532,"title":{},"body":{"index.html":{}}}],["selector",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"components/PasswordComponent.html":{},"components/SliderComponent.html":{},"components/StrengthMeterComponent.html":{},"components/SvgCopyIconComponent.html":{},"components/SvgRightArrowComponent.html":{}}}],["serialize",{"_index":322,"title":{},"body":{"injectables/PasswordConfigService.html":{}}}],["services/password",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"components/StrengthMeterComponent.html":{}}}],["services/password.service",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"components/PasswordComponent.html":{}}}],["setting",{"_index":331,"title":{},"body":{"injectables/PasswordConfigService.html":{}}}],["signal",{"_index":385,"title":{},"body":{"injectables/PasswordService.html":{}}}],["skills",{"_index":555,"title":{},"body":{"index.html":{}}}],["slider",{"_index":399,"title":{},"body":{"components/SliderComponent.html":{},"index.html":{}}}],["slider'},{'name",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"components/PasswordComponent.html":{},"components/SliderComponent.html":{},"components/StrengthMeterComponent.html":{},"components/SvgCopyIconComponent.html":{},"components/SvgRightArrowComponent.html":{}}}],["slider.component.html",{"_index":400,"title":{},"body":{"components/SliderComponent.html":{}}}],["slider.component.scss",{"_index":401,"title":{},"body":{"components/SliderComponent.html":{}}}],["slider/slider.component",{"_index":66,"title":{},"body":{"components/AppComponent.html":{}}}],["slidercomponent",{"_index":22,"title":{"components/SliderComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"components/PasswordComponent.html":{},"components/SliderComponent.html":{},"components/StrengthMeterComponent.html":{},"components/SvgCopyIconComponent.html":{},"components/SvgRightArrowComponent.html":{},"coverage.html":{}}}],["solution",{"_index":514,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"injectables/CryptographyService.html":{},"classes/PasswordCharset.html":{},"components/PasswordComponent.html":{},"injectables/PasswordConfigService.html":{},"injectables/PasswordEntropyService.html":{},"injectables/PasswordGenerationService.html":{},"injectables/PasswordService.html":{},"injectables/PasswordStrengthService.html":{},"components/SliderComponent.html":{},"components/StrengthMeterComponent.html":{},"components/SvgCopyIconComponent.html":{},"components/SvgRightArrowComponent.html":{}}}],["src/.../app.config.ts",{"_index":568,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../charset.enum.ts",{"_index":497,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../environment.development.ts",{"_index":569,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":570,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../password",{"_index":498,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/app.component.ts",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:31",{"_index":46,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:40",{"_index":53,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.ts",{"_index":465,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/checkbox/checkbox.component.ts",{"_index":110,"title":{},"body":{"components/CheckboxComponent.html":{},"coverage.html":{}}}],["src/app/checkbox/checkbox.component.ts:24",{"_index":141,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["src/app/checkbox/checkbox.component.ts:25",{"_index":145,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["src/app/checkbox/checkbox.component.ts:26",{"_index":142,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["src/app/checkbox/checkbox.component.ts:27",{"_index":143,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["src/app/checkbox/checkbox.component.ts:29",{"_index":130,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["src/app/checkbox/checkbox.component.ts:33",{"_index":131,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["src/app/checkbox/checkbox.component.ts:37",{"_index":140,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["src/app/checkbox/checkbox.component.ts:41",{"_index":134,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["src/app/checkbox/checkbox.component.ts:45",{"_index":138,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["src/app/password/password.component.ts",{"_index":217,"title":{},"body":{"components/PasswordComponent.html":{},"coverage.html":{}}}],["src/app/password/password.component.ts:27",{"_index":234,"title":{},"body":{"components/PasswordComponent.html":{}}}],["src/app/password/password.component.ts:28",{"_index":238,"title":{},"body":{"components/PasswordComponent.html":{}}}],["src/app/password/password.component.ts:29",{"_index":240,"title":{},"body":{"components/PasswordComponent.html":{}}}],["src/app/password/password.component.ts:30",{"_index":242,"title":{},"body":{"components/PasswordComponent.html":{}}}],["src/app/password/password.component.ts:34",{"_index":230,"title":{},"body":{"components/PasswordComponent.html":{}}}],["src/app/password/password.component.ts:47",{"_index":231,"title":{},"body":{"components/PasswordComponent.html":{}}}],["src/app/services/cryptography.service.ts",{"_index":155,"title":{},"body":{"injectables/CryptographyService.html":{},"coverage.html":{}}}],["src/app/services/cryptography.service.ts:10",{"_index":164,"title":{},"body":{"injectables/CryptographyService.html":{}}}],["src/app/services/cryptography.service.ts:19",{"_index":174,"title":{},"body":{"injectables/CryptographyService.html":{}}}],["src/app/services/cryptography.service.ts:40",{"_index":165,"title":{},"body":{"injectables/CryptographyService.html":{}}}],["src/app/services/cryptography.service.ts:47",{"_index":166,"title":{},"body":{"injectables/CryptographyService.html":{}}}],["src/app/services/cryptography.service.ts:7",{"_index":182,"title":{},"body":{"injectables/CryptographyService.html":{}}}],["src/app/services/cryptography.service.ts:8",{"_index":179,"title":{},"body":{"injectables/CryptographyService.html":{}}}],["src/app/services/cryptography.service.ts:9",{"_index":177,"title":{},"body":{"injectables/CryptographyService.html":{}}}],["src/app/services/password",{"_index":283,"title":{},"body":{"injectables/PasswordConfigService.html":{},"injectables/PasswordEntropyService.html":{},"injectables/PasswordGenerationService.html":{},"injectables/PasswordStrengthService.html":{},"coverage.html":{}}}],["src/app/services/password.service.ts",{"_index":384,"title":{},"body":{"injectables/PasswordService.html":{},"coverage.html":{}}}],["src/app/services/password.service.ts:7",{"_index":386,"title":{},"body":{"injectables/PasswordService.html":{}}}],["src/app/slider/slider.component.ts",{"_index":398,"title":{},"body":{"components/SliderComponent.html":{},"coverage.html":{}}}],["src/app/slider/slider.component.ts:22",{"_index":416,"title":{},"body":{"components/SliderComponent.html":{}}}],["src/app/slider/slider.component.ts:23",{"_index":421,"title":{},"body":{"components/SliderComponent.html":{}}}],["src/app/slider/slider.component.ts:24",{"_index":420,"title":{},"body":{"components/SliderComponent.html":{}}}],["src/app/slider/slider.component.ts:25",{"_index":425,"title":{},"body":{"components/SliderComponent.html":{}}}],["src/app/slider/slider.component.ts:26",{"_index":422,"title":{},"body":{"components/SliderComponent.html":{}}}],["src/app/slider/slider.component.ts:27",{"_index":423,"title":{},"body":{"components/SliderComponent.html":{}}}],["src/app/slider/slider.component.ts:30",{"_index":410,"title":{},"body":{"components/SliderComponent.html":{}}}],["src/app/slider/slider.component.ts:35",{"_index":411,"title":{},"body":{"components/SliderComponent.html":{}}}],["src/app/slider/slider.component.ts:39",{"_index":412,"title":{},"body":{"components/SliderComponent.html":{}}}],["src/app/slider/slider.component.ts:43",{"_index":415,"title":{},"body":{"components/SliderComponent.html":{}}}],["src/app/slider/slider.component.ts:47",{"_index":413,"title":{},"body":{"components/SliderComponent.html":{}}}],["src/app/slider/slider.component.ts:51",{"_index":414,"title":{},"body":{"components/SliderComponent.html":{}}}],["src/app/strength",{"_index":432,"title":{},"body":{"components/StrengthMeterComponent.html":{},"coverage.html":{}}}],["src/app/svg/svg",{"_index":455,"title":{},"body":{"components/SvgCopyIconComponent.html":{},"components/SvgRightArrowComponent.html":{},"coverage.html":{}}}],["src/app/types/charset.enum.ts",{"_index":500,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/types/password",{"_index":206,"title":{},"body":{"classes/PasswordCharset.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/environments/environment.development.ts",{"_index":477,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":479,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["stack",{"_index":517,"title":{},"body":{"index.html":{}}}],["standalone",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"components/PasswordComponent.html":{},"components/SliderComponent.html":{},"components/StrengthMeterComponent.html":{},"components/SvgCopyIconComponent.html":{},"components/SvgRightArrowComponent.html":{},"index.html":{}}}],["started",{"_index":511,"title":{"index.html":{}},"body":{}}],["statements",{"_index":463,"title":{},"body":{"coverage.html":{}}}],["storage",{"_index":314,"title":{},"body":{"injectables/PasswordConfigService.html":{}}}],["storage.getitem(charsetkey",{"_index":330,"title":{},"body":{"injectables/PasswordConfigService.html":{}}}],["storage.getitem(pwd_length_key",{"_index":318,"title":{},"body":{"injectables/PasswordConfigService.html":{}}}],["storage.setitem",{"_index":324,"title":{},"body":{"injectables/PasswordConfigService.html":{}}}],["strength",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"components/PasswordComponent.html":{},"injectables/PasswordStrengthService.html":{},"components/SliderComponent.html":{},"components/StrengthMeterComponent.html":{},"components/SvgCopyIconComponent.html":{},"components/SvgRightArrowComponent.html":{}}}],["strength.enum",{"_index":397,"title":{},"body":{"injectables/PasswordStrengthService.html":{}}}],["strength.enum.ts",{"_index":499,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["strength.service",{"_index":454,"title":{},"body":{"components/StrengthMeterComponent.html":{}}}],["strength.service.ts",{"_index":388,"title":{},"body":{"injectables/PasswordStrengthService.html":{},"coverage.html":{}}}],["strength.service.ts:13",{"_index":395,"title":{},"body":{"injectables/PasswordStrengthService.html":{}}}],["strength.service.ts:21",{"_index":391,"title":{},"body":{"injectables/PasswordStrengthService.html":{}}}],["strengthmetercomponent",{"_index":24,"title":{"components/StrengthMeterComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"components/PasswordComponent.html":{},"components/SliderComponent.html":{},"components/StrengthMeterComponent.html":{},"components/SvgCopyIconComponent.html":{},"components/SvgRightArrowComponent.html":{},"coverage.html":{}}}],["strengthmeterlabel",{"_index":438,"title":{},"body":{"components/StrengthMeterComponent.html":{}}}],["strengthmeterlabels",{"_index":439,"title":{},"body":{"components/StrengthMeterComponent.html":{}}}],["string",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"classes/PasswordCharset.html":{},"components/PasswordComponent.html":{},"injectables/PasswordGenerationService.html":{}}}],["strong",{"_index":452,"title":{},"body":{"components/StrengthMeterComponent.html":{}}}],["style",{"_index":248,"title":{},"body":{"components/PasswordComponent.html":{},"components/SliderComponent.html":{}}}],["styleurl",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"components/PasswordComponent.html":{},"components/SliderComponent.html":{},"components/StrengthMeterComponent.html":{},"components/SvgCopyIconComponent.html":{}}}],["support",{"_index":189,"title":{},"body":{"injectables/CryptographyService.html":{}}}],["svg",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"components/PasswordComponent.html":{},"components/SliderComponent.html":{},"components/StrengthMeterComponent.html":{},"components/SvgCopyIconComponent.html":{},"components/SvgRightArrowComponent.html":{}}}],["svg/svg",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"components/PasswordComponent.html":{}}}],["svgcopyiconcomponent",{"_index":101,"title":{"components/SvgCopyIconComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"components/PasswordComponent.html":{},"components/SliderComponent.html":{},"components/StrengthMeterComponent.html":{},"components/SvgCopyIconComponent.html":{},"components/SvgRightArrowComponent.html":{},"coverage.html":{}}}],["svgrightarrowcomponent",{"_index":25,"title":{"components/SvgRightArrowComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"components/PasswordComponent.html":{},"components/SliderComponent.html":{},"components/StrengthMeterComponent.html":{},"components/SvgCopyIconComponent.html":{},"components/SvgRightArrowComponent.html":{},"coverage.html":{}}}],["symbols",{"_index":306,"title":{},"body":{"injectables/PasswordConfigService.html":{},"miscellaneous/enumerations.html":{}}}],["table",{"_index":481,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":480,"title":{},"body":{"coverage.html":{}}}],["tech",{"_index":516,"title":{},"body":{"index.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"components/PasswordComponent.html":{},"components/SliderComponent.html":{},"components/StrengthMeterComponent.html":{},"components/SvgCopyIconComponent.html":{},"components/SvgRightArrowComponent.html":{}}}],["templateurl",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"components/PasswordComponent.html":{},"components/SliderComponent.html":{},"components/StrengthMeterComponent.html":{}}}],["testing",{"_index":528,"title":{},"body":{"index.html":{}}}],["this.#buffer.length",{"_index":202,"title":{},"body":{"injectables/CryptographyService.html":{}}}],["this.#buffer[this.#bufferindex",{"_index":203,"title":{},"body":{"injectables/CryptographyService.html":{}}}],["this.#bufferindex",{"_index":201,"title":{},"body":{"injectables/CryptographyService.html":{}}}],["this.#fillbuffer",{"_index":193,"title":{},"body":{"injectables/CryptographyService.html":{}}}],["this.#placeholder",{"_index":241,"title":{},"body":{"components/PasswordComponent.html":{}}}],["this._changedetectorref.markforcheck",{"_index":261,"title":{},"body":{"components/PasswordComponent.html":{}}}],["this._config.pwdcharsets",{"_index":341,"title":{},"body":{"injectables/PasswordEntropyService.html":{}}}],["this._config.pwdlength",{"_index":339,"title":{},"body":{"injectables/PasswordEntropyService.html":{}}}],["this._entropy.passwordentropy",{"_index":393,"title":{},"body":{"injectables/PasswordStrengthService.html":{}}}],["this._password.value",{"_index":239,"title":{},"body":{"components/PasswordComponent.html":{}}}],["this._password.value.set(this._generator.makepassword",{"_index":84,"title":{},"body":{"components/AppComponent.html":{}}}],["this._pwdconfig.pwdcharsets",{"_index":372,"title":{},"body":{"injectables/PasswordGenerationService.html":{}}}],["this._pwdconfig.pwdcharsets.reduce",{"_index":376,"title":{},"body":{"injectables/PasswordGenerationService.html":{}}}],["this._pwdconfig.pwdlength",{"_index":380,"title":{},"body":{"injectables/PasswordGenerationService.html":{}}}],["this._strengthservice.passwordstrength",{"_index":446,"title":{},"body":{"components/StrengthMeterComponent.html":{}}}],["this.includedcharsets",{"_index":381,"title":{},"body":{"injectables/PasswordGenerationService.html":{}}}],["this.iscopied",{"_index":260,"title":{},"body":{"components/PasswordComponent.html":{}}}],["this.isplaceholder",{"_index":237,"title":{},"body":{"components/PasswordComponent.html":{}}}],["this.max",{"_index":430,"title":{},"body":{"components/SliderComponent.html":{}}}],["this.onchange",{"_index":151,"title":{},"body":{"components/CheckboxComponent.html":{},"components/SliderComponent.html":{}}}],["this.onchange(this.value",{"_index":149,"title":{},"body":{"components/CheckboxComponent.html":{},"components/SliderComponent.html":{}}}],["this.ontouched",{"_index":148,"title":{},"body":{"components/CheckboxComponent.html":{},"components/SliderComponent.html":{}}}],["this.password",{"_index":257,"title":{},"body":{"components/PasswordComponent.html":{}}}],["this.passwordstrength",{"_index":443,"title":{},"body":{"components/StrengthMeterComponent.html":{}}}],["this.pwdcharset",{"_index":379,"title":{},"body":{"injectables/PasswordGenerationService.html":{}}}],["this.pwdcharsets",{"_index":326,"title":{},"body":{"injectables/PasswordConfigService.html":{}}}],["this.pwdlength.set(json.parse(pwdlength",{"_index":321,"title":{},"body":{"injectables/PasswordConfigService.html":{}}}],["this.strengthmeterlabel",{"_index":444,"title":{},"body":{"components/StrengthMeterComponent.html":{}}}],["this.strengthmeterlabels[this.passwordstrength",{"_index":448,"title":{},"body":{"components/StrengthMeterComponent.html":{}}}],["this.value",{"_index":429,"title":{},"body":{"components/SliderComponent.html":{}}}],["this.value.set(value",{"_index":150,"title":{},"body":{"components/CheckboxComponent.html":{},"components/SliderComponent.html":{}}}],["throw",{"_index":186,"title":{},"body":{"injectables/CryptographyService.html":{},"components/PasswordComponent.html":{}}}],["tools",{"_index":541,"title":{},"body":{"index.html":{}}}],["transform",{"_index":418,"title":{},"body":{"components/SliderComponent.html":{}}}],["transition",{"_index":247,"title":{},"body":{"components/PasswordComponent.html":{}}}],["transition(':enter",{"_index":253,"title":{},"body":{"components/PasswordComponent.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"components/PasswordComponent.html":{},"components/SliderComponent.html":{},"components/StrengthMeterComponent.html":{},"components/SvgCopyIconComponent.html":{},"components/SvgRightArrowComponent.html":{}}}],["trigger",{"_index":246,"title":{},"body":{"components/PasswordComponent.html":{}}}],["trigger('fadein",{"_index":252,"title":{},"body":{"components/PasswordComponent.html":{}}}],["true",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"components/PasswordComponent.html":{},"components/SliderComponent.html":{},"components/StrengthMeterComponent.html":{},"components/SvgCopyIconComponent.html":{},"components/SvgRightArrowComponent.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":262,"title":{},"body":{"components/PasswordComponent.html":{}}}],["tslib",{"_index":491,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"injectables/CryptographyService.html":{},"classes/PasswordCharset.html":{},"components/PasswordComponent.html":{},"injectables/PasswordConfigService.html":{},"injectables/PasswordEntropyService.html":{},"injectables/PasswordGenerationService.html":{},"injectables/PasswordStrengthService.html":{},"components/SliderComponent.html":{},"components/StrengthMeterComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["types/charset.enum",{"_index":310,"title":{},"body":{"injectables/PasswordConfigService.html":{}}}],["types/password",{"_index":311,"title":{},"body":{"injectables/PasswordConfigService.html":{},"injectables/PasswordStrengthService.html":{}}}],["uint8array(this.#buffer_size",{"_index":176,"title":{},"body":{"injectables/CryptographyService.html":{}}}],["unavailable",{"_index":317,"title":{},"body":{"injectables/PasswordConfigService.html":{}}}],["undefined",{"_index":185,"title":{},"body":{"injectables/CryptographyService.html":{},"injectables/PasswordConfigService.html":{}}}],["unexpected",{"_index":268,"title":{},"body":{"components/PasswordComponent.html":{}}}],["unit",{"_index":526,"title":{},"body":{"index.html":{}}}],["unsigned",{"_index":169,"title":{},"body":{"injectables/CryptographyService.html":{}}}],["upperbound",{"_index":197,"title":{},"body":{"injectables/CryptographyService.html":{}}}],["uppercase",{"_index":296,"title":{},"body":{"injectables/PasswordConfigService.html":{},"miscellaneous/enumerations.html":{}}}],["useexisting",{"_index":116,"title":{},"body":{"components/CheckboxComponent.html":{},"components/SliderComponent.html":{}}}],["user",{"_index":279,"title":{},"body":{"components/PasswordComponent.html":{}}}],["value",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"injectables/CryptographyService.html":{},"classes/PasswordCharset.html":{},"components/PasswordComponent.html":{},"injectables/PasswordConfigService.html":{},"injectables/PasswordEntropyService.html":{},"injectables/PasswordGenerationService.html":{},"injectables/PasswordService.html":{},"injectables/PasswordStrengthService.html":{},"components/SliderComponent.html":{},"components/StrengthMeterComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"components/PasswordComponent.html":{},"components/SliderComponent.html":{},"components/StrengthMeterComponent.html":{},"components/SvgCopyIconComponent.html":{},"components/SvgRightArrowComponent.html":{}}}],["variable",{"_index":466,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":567,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vercel",{"_index":536,"title":{},"body":{"index.html":{}}}],["void",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"injectables/CryptographyService.html":{},"components/SliderComponent.html":{}}}],["vs",{"_index":542,"title":{},"body":{"index.html":{}}}],["weak",{"_index":450,"title":{},"body":{"components/StrengthMeterComponent.html":{}}}],["web",{"_index":190,"title":{},"body":{"injectables/CryptographyService.html":{},"index.html":{}}}],["website",{"_index":547,"title":{},"body":{"index.html":{}}}],["window.crypto",{"_index":184,"title":{},"body":{"injectables/CryptographyService.html":{}}}],["window.crypto.getrandomvalues(this.#buffer",{"_index":200,"title":{},"body":{"injectables/CryptographyService.html":{}}}],["window.localstorage",{"_index":315,"title":{},"body":{"injectables/PasswordConfigService.html":{}}}],["window.navigator.clipboard.writetext(this.password",{"_index":264,"title":{},"body":{"components/PasswordComponent.html":{}}}],["write",{"_index":274,"title":{},"body":{"components/PasswordComponent.html":{}}}],["writevalue",{"_index":129,"title":{},"body":{"components/CheckboxComponent.html":{},"components/SliderComponent.html":{}}}],["writevalue(value",{"_index":139,"title":{},"body":{"components/CheckboxComponent.html":{},"components/SliderComponent.html":{}}}],["zone.js",{"_index":493,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            NgFor\n                            FormsModule\n                                PasswordComponent\n                                SliderComponent\n                                CheckboxComponent\n                                StrengthMeterComponent\n                                SvgRightArrowComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n            \n                styleUrl\n                ./app.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                PASSWORD_LENGTH_INPUT\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                generatePassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(config: PasswordConfigService, entropyService: PasswordEntropyService, _generator: PasswordGenerationService, _password: PasswordService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        PasswordConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        entropyService\n                                                  \n                                                        \n                                                                        PasswordEntropyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _generator\n                                                  \n                                                        \n                                                                        PasswordGenerationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _password\n                                                  \n                                                        \n                                                                        PasswordService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        generatePassword\n                        \n                    \n                \n            \n            \n                \ngeneratePassword()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:40\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        PASSWORD_LENGTH_INPUT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'password-length-input'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:31\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { PasswordComponent } from './password/password.component';\nimport { SliderComponent } from './slider/slider.component';\nimport { CheckboxComponent } from './checkbox/checkbox.component';\nimport { StrengthMeterComponent } from './strength-meter/strength-meter.component';\nimport { PasswordGenerationService } from './services/password-generation.service';\nimport { PasswordService } from './services/password.service';\nimport { PasswordConfigService } from './services/password-config.service';\nimport { FormsModule } from '@angular/forms';\nimport { NgFor } from '@angular/common';\nimport { SvgRightArrowComponent } from './svg/svg-right-arrow.component';\nimport { PasswordEntropyService } from './services/password-entropy.service';\n\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [\n    NgFor,\n    FormsModule,\n    PasswordComponent,\n    SliderComponent,\n    CheckboxComponent,\n    StrengthMeterComponent,\n    SvgRightArrowComponent,\n  ],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AppComponent {\n  readonly PASSWORD_LENGTH_INPUT = 'password-length-input';\n\n  constructor(\n    readonly config: PasswordConfigService,\n    readonly entropyService: PasswordEntropyService,\n    private readonly _generator: PasswordGenerationService,\n    private readonly _password: PasswordService,\n  ) { }\n\n  generatePassword(): void {\n    this._password.value.set(this._generator.makePassword());\n  }\n}\n\n    \n\n    \n        Password Generator\n\n\n  \n    Character Length\n    {{ config.pwdLength() }}\n  \n  \n  \n    \n      \n      \n        {{ charset.label }}\n      \n    \n  \n  \n  \n    Generate\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Password Generator      Character Length    {{ config.pwdLength() }}                              {{ charset.label }}                    Generate      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'SliderComponent', 'selector': 'app-slider'},{'name': 'StrengthMeterComponent', 'selector': 'app-strength-meter'},{'name': 'SvgCopyIconComponent', 'selector': 'app-svg-copy-icon'},{'name': 'SvgRightArrowComponent', 'selector': 'app-svg-right-arrow'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CheckboxComponent.html":{"url":"components/CheckboxComponent.html","title":"component - CheckboxComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CheckboxComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/checkbox/checkbox.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                {\n    provide: NG_VALUE_ACCESSOR, useExisting: CheckboxComponent, multi: true,\n}\n                \n            \n\n\n            \n                selector\n                app-checkbox\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            NgTemplateOutlet\n                            FormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./checkbox.component.html\n            \n\n\n\n            \n                styleUrl\n                ./checkbox.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                labelId\n                            \n                            \n                                onChange\n                            \n                            \n                                onTouched\n                            \n                            \n                                    Readonly\n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onBlur\n                            \n                            \n                                onValueChange\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onBlur\n                        \n                    \n                \n            \n            \n                \nonBlur()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/checkbox/checkbox.component.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onValueChange\n                        \n                    \n                \n            \n            \n                \nonValueChange()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/checkbox/checkbox.component.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: (value: boolean) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/checkbox/checkbox.component.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fn\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: () => void)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/checkbox/checkbox.component.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fn\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue(value: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/checkbox/checkbox.component.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        labelId\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input()\n                    \n                \n                    \n                        \n                                Defined in src/app/checkbox/checkbox.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onChange\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/checkbox/checkbox.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onTouched\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/checkbox/checkbox.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Default value : model(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/checkbox/checkbox.component.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { NgTemplateOutlet } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, input, model } from '@angular/core';\nimport { ControlValueAccessor, FormsModule, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n@Component({\n  selector: 'app-checkbox',\n  standalone: true,\n  imports: [\n    NgTemplateOutlet,\n    FormsModule,\n  ],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: CheckboxComponent,\n      multi: true,\n    },\n  ],\n  templateUrl: './checkbox.component.html',\n  styleUrl: './checkbox.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CheckboxComponent implements ControlValueAccessor {\n  readonly labelId = input();\n  readonly value = model(false);\n  onChange = (_value: boolean) => { };\n  onTouched = () => { };\n\n  onBlur(): void {\n    this.onTouched();\n  }\n\n  onValueChange(): void {\n    this.onChange(this.value());\n  }\n\n  writeValue(value: boolean): void {\n    this.value.set(value);\n  }\n\n  registerOnChange(fn: (value: boolean) => void): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => void): void {\n    this.onTouched = fn;\n  }\n}\n\n    \n\n    \n        \n  \n  \n\n\n\n  \n    \n    \n  \n\n\n\n  \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'SliderComponent', 'selector': 'app-slider'},{'name': 'StrengthMeterComponent', 'selector': 'app-strength-meter'},{'name': 'SvgCopyIconComponent', 'selector': 'app-svg-copy-icon'},{'name': 'SvgRightArrowComponent', 'selector': 'app-svg-right-arrow'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CheckboxComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CryptographyService.html":{"url":"injectables/CryptographyService.html","title":"injectable - CryptographyService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CryptographyService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/cryptography.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                    Private\n                                #buffer\n                            \n                            \n                                    Readonly\n                                    Private\n                                #BUFFER_SIZE\n                            \n                            \n                                    Private\n                                #bufferIndex\n                            \n                            \n                                    Readonly\n                                    Private\n                                #MAX_BYTE\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                #fillBuffer\n                            \n                            \n                                    Private\n                                #getRandomByte\n                            \n                            \n                                    Public\n                                getRandomIndex\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/cryptography.service.ts:10\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        #fillBuffer\n                        \n                    \n                \n            \n            \n                \n                        \n                    #fillBuffer()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/cryptography.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        #getRandomByte\n                        \n                    \n                \n            \n            \n                \n                        \n                    #getRandomByte()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/cryptography.service.ts:47\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         number\n\n                        \n                            \n                                A random unsigned 8-bit integer\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getRandomIndex\n                        \n                    \n                \n            \n            \n                \n                        \n                    getRandomIndex(length: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/cryptography.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                length\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Private\n                        #buffer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Uint8Array(this.#BUFFER_SIZE)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/cryptography.service.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Private\n                        #BUFFER_SIZE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1024\n                    \n                \n                    \n                        \n                                Defined in src/app/services/cryptography.service.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        #bufferIndex\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/services/cryptography.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Private\n                        #MAX_BYTE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 255\n                    \n                \n                    \n                        \n                                Defined in src/app/services/cryptography.service.ts:7\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CryptographyService {\n  readonly #MAX_BYTE = 255;\n  readonly #BUFFER_SIZE = 1024;\n  readonly #buffer = new Uint8Array(this.#BUFFER_SIZE);\n  #bufferIndex = 0;\n\n  constructor() {\n    if (window.crypto === undefined)\n      throw new Error('Your browser does not support the Web Cryptography API');\n\n    this.#fillBuffer();\n  }\n\n  public getRandomIndex(length: number): number {\n    const isValidInput = length >= 1\n      && length  upperBound);\n\n    return sampledByte % length;\n  }\n\n  #fillBuffer(): void {\n    window.crypto.getRandomValues(this.#buffer);\n  }\n\n  /**\n   * @returns A random unsigned 8-bit integer\n   */\n  #getRandomByte(): number {\n    if (this.#bufferIndex === this.#buffer.length) {\n      this.#bufferIndex = 0;\n      this.#fillBuffer();\n    }\n    return this.#buffer[this.#bufferIndex++];\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PasswordCharset.html":{"url":"classes/PasswordCharset.html","title":"class - PasswordCharset","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PasswordCharset\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/types/password-charset.class.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isIncluded\n                            \n                            \n                                    Public\n                                    Readonly\n                                label\n                            \n                            \n                                    Public\n                                    Readonly\n                                name\n                            \n                            \n                                    Public\n                                    Readonly\n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, value: Charset, label: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/types/password-charset.class.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        value\n                                                  \n                                                        \n                                                                        Charset\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        label\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isIncluded\n                        \n                    \n                \n            \n                \n                    \n                        Default value : model(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/types/password-charset.class.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        label\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/types/password-charset.class.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/types/password-charset.class.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Charset\n\n                    \n                \n                    \n                        \n                                Defined in src/app/types/password-charset.class.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { model } from \"@angular/core\";\nimport { Charset } from \"./charset.enum\";\n\nexport class PasswordCharset {\n  isIncluded = model(false);\n\n  constructor(\n    public readonly name: string,\n    public readonly value: Charset,\n    public readonly label: string,\n  ) { }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PasswordComponent.html":{"url":"components/PasswordComponent.html","title":"component - PasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/password/password.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-password\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            NgIf\n                                SvgCopyIconComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./password.component.html\n            \n\n\n\n            \n                styleUrl\n                ./password.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                    Private\n                                #PLACEHOLDER\n                            \n                            \n                                isCopied\n                            \n                            \n                                    Readonly\n                                isCopyDisabled\n                            \n                            \n                                    Readonly\n                                isPlaceholder\n                            \n                            \n                                    Readonly\n                                password\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                copyPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_password: PasswordService, _changeDetectorRef: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/password/password.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _password\n                                                  \n                                                        \n                                                                        PasswordService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _changeDetectorRef\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        copyPassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    copyPassword()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/password/password.component.ts:47\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Private\n                        #PLACEHOLDER\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'P4$5W0rD!'\n                    \n                \n                    \n                        \n                                Defined in src/app/password/password.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isCopied\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/password/password.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isCopyDisabled\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => this.isPlaceholder())\n                    \n                \n                    \n                        \n                                Defined in src/app/password/password.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isPlaceholder\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => this._password.value() === '')\n                    \n                \n                    \n                        \n                                Defined in src/app/password/password.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    const value = this._password.value();\n    return value === '' ? this.#PLACEHOLDER : value;\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/password/password.component.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, ChangeDetectorRef, Component, computed, effect } from '@angular/core';\nimport { PasswordService } from '../services/password.service';\nimport { SvgCopyIconComponent } from '../svg/svg-copy-icon/svg-copy-icon.component';\nimport { NgIf } from '@angular/common';\nimport { trigger, transition, style, animate } from '@angular/animations';\n\n@Component({\n  animations: [\n    trigger('fadeIn', [\n      transition(':enter', [\n        style({ opacity: 0 }),\n        animate('400ms ease', style({ opacity: 1 })),\n      ]),\n    ]),\n  ],\n  selector: 'app-password',\n  standalone: true,\n  imports: [\n    NgIf,\n    SvgCopyIconComponent,\n  ],\n  templateUrl: './password.component.html',\n  styleUrl: './password.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PasswordComponent {\n  readonly #PLACEHOLDER = 'P4$5W0rD!';\n  readonly isCopyDisabled = computed(() => this.isPlaceholder());\n  readonly isPlaceholder = computed(() => this._password.value() === '');\n  readonly password = computed(() => {\n    const value = this._password.value();\n    return value === '' ? this.#PLACEHOLDER : value;\n  });\n  isCopied = false;\n\n  constructor(\n    private readonly _password: PasswordService,\n    private readonly _changeDetectorRef: ChangeDetectorRef,\n  ) {\n    effect(() => {\n      this.password(); // Detect password changes\n      this.isCopied = false;\n      this._changeDetectorRef.markForCheck();\n    });\n  }\n\n  async copyPassword(): Promise {\n    try {\n      await window.navigator.clipboard.writeText(this.password());\n      this.isCopied = true;\n      this._changeDetectorRef.markForCheck();\n    } catch (error) {\n      let message = 'Unexpected error';\n\n      if (error instanceof DOMException && error.name === 'NotAllowedError')\n        message = 'Clipboard write permission denied';\n\n      alert(message); // Notify user\n      throw new Error(message, { cause: error });\n    }\n  }\n}\n\n    \n\n    \n        {{ password() }}\nCopied\n\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ password() }}Copied  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'SliderComponent', 'selector': 'app-slider'},{'name': 'StrengthMeterComponent', 'selector': 'app-strength-meter'},{'name': 'SvgCopyIconComponent', 'selector': 'app-svg-copy-icon'},{'name': 'SvgRightArrowComponent', 'selector': 'app-svg-right-arrow'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PasswordConfigService.html":{"url":"injectables/PasswordConfigService.html","title":"injectable - PasswordConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PasswordConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/password-config.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                PWD_MAX_LENGTH\n                            \n                            \n                                    Readonly\n                                PWD_MIN_LENGTH\n                            \n                            \n                                    Readonly\n                                pwdCharsets\n                            \n                            \n                                    Readonly\n                                pwdLength\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/password-config.service.ts:18\n                            \n                        \n\n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        PWD_MAX_LENGTH\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 64\n                    \n                \n                    \n                        \n                                Defined in src/app/services/password-config.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        PWD_MIN_LENGTH\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/services/password-config.service.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        pwdCharsets\n                        \n                    \n                \n            \n                \n                    \n                        Default value : [\n    new PasswordCharset('uppercase', Charset.UPPERCASE, 'Include Uppercase Letters'),\n    new PasswordCharset('lowercase', Charset.LOWERCASE, 'Include Lowercase Letters'),\n    new PasswordCharset('digits', Charset.DIGITS, 'Include Numbers'),\n    new PasswordCharset('symbols', Charset.SYMBOLS, 'Include Symbols'),\n  ] as const\n                    \n                \n                    \n                        \n                                Defined in src/app/services/password-config.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        pwdLength\n                        \n                    \n                \n            \n                \n                    \n                        Default value : model(0)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/password-config.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, effect, model } from '@angular/core';\nimport { Charset } from '../types/charset.enum';\nimport { PasswordCharset } from '../types/password-charset.class';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PasswordConfigService {\n  readonly PWD_MIN_LENGTH = 0;\n  readonly PWD_MAX_LENGTH = 64;\n  readonly pwdLength = model(0);\n\n  readonly pwdCharsets = [\n    new PasswordCharset('uppercase', Charset.UPPERCASE, 'Include Uppercase Letters'),\n    new PasswordCharset('lowercase', Charset.LOWERCASE, 'Include Lowercase Letters'),\n    new PasswordCharset('digits', Charset.DIGITS, 'Include Numbers'),\n    new PasswordCharset('symbols', Charset.SYMBOLS, 'Include Symbols'),\n  ] as const;\n\n  constructor() {\n    const PWD_LENGTH_KEY = 'pwdLength';\n    const storage = window.localStorage;\n\n    if (storage === undefined) {\n      console.error('Local storage API unavailable');\n      return;\n    }\n\n    const pwdLength = storage.getItem(PWD_LENGTH_KEY);\n\n    if (pwdLength !== null) {\n      // Deserialize password length\n      this.pwdLength.set(JSON.parse(pwdLength) as number);\n    }\n\n    effect(() => {\n      // Serialize password length on change\n      storage.setItem(\n        PWD_LENGTH_KEY,\n        JSON.stringify(this.pwdLength())\n      );\n    });\n\n    for (const charset of this.pwdCharsets) {\n      const charsetKey = charset.name;\n      const isCharsetIncluded = storage.getItem(charsetKey);\n\n      if (isCharsetIncluded !== null) {\n        // Deserialize charset setting\n        charset.isIncluded.set(JSON.parse(isCharsetIncluded) as boolean);\n      }\n\n      effect(() => {\n        // Serialize charset setting on change\n        storage.setItem(\n          charsetKey,\n          JSON.stringify(charset.isIncluded())\n        );\n      });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PasswordEntropyService.html":{"url":"injectables/PasswordEntropyService.html","title":"injectable - PasswordEntropyService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PasswordEntropyService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/password-entropy.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                passwordEntropy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_config: PasswordConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/password-entropy.service.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _config\n                                                  \n                                                        \n                                                                        PasswordConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        passwordEntropy\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    const pwdLength = this._config.pwdLength();\n    const charsetSize = this._config.pwdCharsets\n      .filter(charset => charset.isIncluded())\n      .reduce((acc, charset) => acc + charset.value.length, 0);\n\n    if (charsetSize === 0 || pwdLength === 0) return 0;\n    return pwdLength * Math.log2(charsetSize);\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/services/password-entropy.service.ts:12\n                        \n                    \n\n            \n                \n                    Compute password entropy in bits.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, computed } from '@angular/core';\nimport { PasswordConfigService } from './password-config.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PasswordEntropyService {\n  /**\n   * Compute password entropy in bits.\n   * @link https://nordvpn.com/blog/what-is-password-entropy/\n   */\n  public passwordEntropy = computed(() => {\n    const pwdLength = this._config.pwdLength();\n    const charsetSize = this._config.pwdCharsets\n      .filter(charset => charset.isIncluded())\n      .reduce((acc, charset) => acc + charset.value.length, 0);\n\n    if (charsetSize === 0 || pwdLength === 0) return 0;\n    return pwdLength * Math.log2(charsetSize);\n  });\n\n  constructor(\n    private readonly _config: PasswordConfigService,\n  ) { }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PasswordGenerationService.html":{"url":"injectables/PasswordGenerationService.html","title":"injectable - PasswordGenerationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PasswordGenerationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/password-generation.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                includedCharsets\n                            \n                            \n                                    Readonly\n                                pwdCharset\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                #getRandomChar\n                            \n                            \n                                    Private\n                                #getRandomString\n                            \n                            \n                                    Private\n                                #insertRandomChar\n                            \n                            \n                                makePassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_crypto: CryptographyService, _pwdConfig: PasswordConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/password-generation.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _crypto\n                                                  \n                                                        \n                                                                        CryptographyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _pwdConfig\n                                                  \n                                                        \n                                                                        PasswordConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        #getRandomChar\n                        \n                    \n                \n            \n            \n                \n                        \n                    #getRandomChar(charset: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/password-generation.service.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                charset\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        #getRandomString\n                        \n                    \n                \n            \n            \n                \n                        \n                    #getRandomString(charset: string, length: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/password-generation.service.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                charset\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                length\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        #insertRandomChar\n                        \n                    \n                \n            \n            \n                \n                        \n                    #insertRandomChar(charset: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/password-generation.service.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                charset\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makePassword\n                        \n                    \n                \n            \n            \n                \nmakePassword()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/password-generation.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        includedCharsets\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(\n    () => this._pwdConfig.pwdCharsets\n      .filter(charset => charset.isIncluded())\n      .map(charset => charset.value)\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/services/password-generation.service.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        pwdCharset\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(\n    () => this._pwdConfig.pwdCharsets.reduce(\n      (acc, charset) => charset.isIncluded() ? acc + charset.value : acc, ''\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/services/password-generation.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, computed } from '@angular/core';\nimport { PasswordConfigService } from './password-config.service';\nimport { CryptographyService } from './cryptography.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PasswordGenerationService {\n  readonly includedCharsets = computed(\n    () => this._pwdConfig.pwdCharsets\n      .filter(charset => charset.isIncluded())\n      .map(charset => charset.value)\n  );\n\n  readonly pwdCharset = computed(\n    () => this._pwdConfig.pwdCharsets.reduce(\n      (acc, charset) => charset.isIncluded() ? acc + charset.value : acc, ''\n    )\n  );\n\n  constructor(\n    private readonly _crypto: CryptographyService,\n    private readonly _pwdConfig: PasswordConfigService,\n  ) { }\n\n  makePassword(): string {\n    const pwdCharset = this.pwdCharset();\n    const pwdLength = this._pwdConfig.pwdLength();\n    const includedCharsets = this.includedCharsets();\n    const includedCharsetsCount = includedCharsets.length;\n    let password = '';\n\n    if (pwdLength === 0 || includedCharsetsCount === 0)\n      return '';\n\n    if (pwdLength \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PasswordService.html":{"url":"injectables/PasswordService.html","title":"injectable - PasswordService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PasswordService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/password.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('')\n                    \n                \n                    \n                        \n                                Defined in src/app/services/password.service.ts:7\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, signal } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PasswordService {\n  readonly value = signal('');\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PasswordStrengthService.html":{"url":"injectables/PasswordStrengthService.html","title":"injectable - PasswordStrengthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PasswordStrengthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/password-strength.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                passwordStrength\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_entropy: PasswordEntropyService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/password-strength.service.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _entropy\n                                                  \n                                                        \n                                                                        PasswordEntropyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        passwordStrength\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    const entropy = this._entropy.passwordEntropy();\n\n    if (entropy === 0) return PasswordStrength.LEVEL_0;\n    if (entropy \n                    \n                \n                    \n                        \n                                Defined in src/app/services/password-strength.service.ts:13\n                        \n                    \n\n            \n                \n                    Compute password strength level from bits of entropy.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, computed } from '@angular/core';\nimport { PasswordStrength } from '../types/password-strength.enum';\nimport { PasswordEntropyService } from './password-entropy.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PasswordStrengthService {\n  /**\n   * Compute password strength level from bits of entropy.\n   * @link https://nordvpn.com/blog/what-is-password-entropy/\n   */\n  public passwordStrength = computed(() => {\n    const entropy = this._entropy.passwordEntropy();\n\n    if (entropy === 0) return PasswordStrength.LEVEL_0;\n    if (entropy \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SliderComponent.html":{"url":"components/SliderComponent.html","title":"component - SliderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SliderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/slider/slider.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                {\n    provide: NG_VALUE_ACCESSOR, useExisting: SliderComponent, multi: true,\n}\n                \n            \n\n\n            \n                selector\n                app-slider\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            FormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./slider.component.html\n            \n\n\n\n            \n                styleUrl\n                ./slider.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                labelId\n                            \n                            \n                                max\n                            \n                            \n                                min\n                            \n                            \n                                onChange\n                            \n                            \n                                onTouched\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onBlur\n                            \n                            \n                                onInput\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                style.--progress-percentage.%\n                            \n                        \n                    \n                \n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    progressPercentage\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        style.--progress-percentage.%\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/slider/slider.component.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onBlur\n                        \n                    \n                \n            \n            \n                \nonBlur()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/slider/slider.component.ts:35\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onInput\n                        \n                    \n                \n            \n            \n                \nonInput()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/slider/slider.component.ts:39\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: (value: number) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/slider/slider.component.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fn\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: () => void)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/slider/slider.component.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fn\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/slider/slider.component.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        labelId\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input()\n                    \n                \n                    \n                        \n                                Defined in src/app/slider/slider.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        max\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input.required({ transform: numberAttribute })\n                    \n                \n                    \n                        \n                                Defined in src/app/slider/slider.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        min\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input.required({ transform: numberAttribute })\n                    \n                \n                    \n                        \n                                Defined in src/app/slider/slider.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onChange\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/slider/slider.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onTouched\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/slider/slider.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Default value : model(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/slider/slider.component.ts:25\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        progressPercentage\n                    \n                \n\n                \n                    \n                        getprogressPercentage()\n                    \n                \n                            \n                                \n                                    Defined in src/app/slider/slider.component.ts:30\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, HostBinding, input, model, numberAttribute } from '@angular/core';\nimport { ControlValueAccessor, FormsModule, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n@Component({\n  selector: 'app-slider',\n  standalone: true,\n  imports: [\n    FormsModule,\n  ],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: SliderComponent,\n      multi: true,\n    },\n  ],\n  templateUrl: './slider.component.html',\n  styleUrl: './slider.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SliderComponent implements ControlValueAccessor {\n  labelId = input();\n  min = input.required({ transform: numberAttribute });\n  max = input.required({ transform: numberAttribute });\n  value = model(null);\n  onChange = (_value: number) => { };\n  onTouched = () => { };\n\n  @HostBinding('style.--progress-percentage.%')\n  get progressPercentage(): number {\n    const value = this.value();\n    return value === null ? 0 : value / this.max() * 100;\n  }\n\n  onBlur(): void {\n    this.onTouched();\n  }\n\n  onInput(): void {\n    this.onChange(this.value()!);\n  }\n\n  writeValue(value: number): void {\n    this.value.set(value);\n  }\n\n  registerOnChange(fn: (value: number) => void): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => void): void {\n    this.onTouched = fn;\n  }\n}\n\n    \n\n    \n        \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'SliderComponent', 'selector': 'app-slider'},{'name': 'StrengthMeterComponent', 'selector': 'app-strength-meter'},{'name': 'SvgCopyIconComponent', 'selector': 'app-svg-copy-icon'},{'name': 'SvgRightArrowComponent', 'selector': 'app-svg-right-arrow'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SliderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StrengthMeterComponent.html":{"url":"components/StrengthMeterComponent.html","title":"component - StrengthMeterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  StrengthMeterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/strength-meter/strength-meter.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-strength-meter\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            NgFor\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./strength-meter.component.html\n            \n\n\n\n            \n                styleUrl\n                ./strength-meter.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                ariaValueText\n                            \n                            \n                                    Readonly\n                                passwordStrength\n                            \n                            \n                                    Readonly\n                                strengthMeterLabel\n                            \n                            \n                                    Readonly\n                                strengthMeterLabels\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_strengthService: PasswordStrengthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/strength-meter/strength-meter.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _strengthService\n                                                  \n                                                        \n                                                                        PasswordStrengthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        ariaValueText\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(\n    () => this.passwordStrength() === 0 ? 'No password' : this.strengthMeterLabel()\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/strength-meter/strength-meter.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        passwordStrength\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this._strengthService.passwordStrength\n                    \n                \n                    \n                        \n                                Defined in src/app/strength-meter/strength-meter.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        strengthMeterLabel\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => this.strengthMeterLabels[this.passwordStrength()])\n                    \n                \n                    \n                        \n                                Defined in src/app/strength-meter/strength-meter.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        strengthMeterLabels\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    '',\n    'too weak!',\n    'weak',\n    'medium',\n    'strong',\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/strength-meter/strength-meter.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, computed } from '@angular/core';\nimport { PasswordStrengthService } from '../services/password-strength.service';\nimport { NgFor } from '@angular/common';\n\n@Component({\n  selector: 'app-strength-meter',\n  standalone: true,\n  imports: [\n    NgFor,\n  ],\n  templateUrl: './strength-meter.component.html',\n  styleUrl: './strength-meter.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StrengthMeterComponent {\n  readonly ariaValueText = computed(\n    () => this.passwordStrength() === 0 ? 'No password' : this.strengthMeterLabel()\n  );\n  readonly passwordStrength = this._strengthService.passwordStrength;\n  readonly strengthMeterLabel = computed(() => this.strengthMeterLabels[this.passwordStrength()]);\n  readonly strengthMeterLabels = [\n    '',\n    'too weak!',\n    'weak',\n    'medium',\n    'strong',\n  ];\n\n  constructor(\n    private readonly _strengthService: PasswordStrengthService,\n  ) { }\n}\n\n    \n\n    \n        Strength\n{{ strengthMeterLabel() }}\n\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Strength{{ strengthMeterLabel() }}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'SliderComponent', 'selector': 'app-slider'},{'name': 'StrengthMeterComponent', 'selector': 'app-strength-meter'},{'name': 'SvgCopyIconComponent', 'selector': 'app-svg-copy-icon'},{'name': 'SvgRightArrowComponent', 'selector': 'app-svg-right-arrow'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StrengthMeterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SvgCopyIconComponent.html":{"url":"components/SvgCopyIconComponent.html","title":"component - SvgCopyIconComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SvgCopyIconComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/svg/svg-copy-icon/svg-copy-icon.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-svg-copy-icon\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n            \n                template\n                \n  \n\n\n            \n\n\n\n\n            \n                styleUrl\n                ./svg-copy-icon.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component } from '@angular/core';\n\n@Component({\n  selector: 'app-svg-copy-icon',\n  standalone: true,\n  imports: [],\n  template: `\n    \n      \n    \n  `,\n  styleUrl: './svg-copy-icon.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SvgCopyIconComponent {\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'SliderComponent', 'selector': 'app-slider'},{'name': 'StrengthMeterComponent', 'selector': 'app-strength-meter'},{'name': 'SvgCopyIconComponent', 'selector': 'app-svg-copy-icon'},{'name': 'SvgRightArrowComponent', 'selector': 'app-svg-right-arrow'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SvgCopyIconComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SvgRightArrowComponent.html":{"url":"components/SvgRightArrowComponent.html","title":"component - SvgRightArrowComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SvgRightArrowComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/svg/svg-right-arrow.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-svg-right-arrow\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n            \n                template\n                \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component } from '@angular/core';\n\n@Component({\n  selector: 'app-svg-right-arrow',\n  standalone: true,\n  imports: [],\n  template: `\n    \n      \n    \n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SvgRightArrowComponent {\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'SliderComponent', 'selector': 'app-slider'},{'name': 'StrengthMeterComponent', 'selector': 'app-strength-meter'},{'name': 'SvgCopyIconComponent', 'selector': 'app-svg-copy-icon'},{'name': 'SvgRightArrowComponent', 'selector': 'app-svg-right-arrow'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SvgRightArrowComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/checkbox/checkbox.component.ts\n            \n            component\n            CheckboxComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/password/password.component.ts\n            \n            component\n            PasswordComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/services/cryptography.service.ts\n            \n            injectable\n            CryptographyService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/services/password-config.service.ts\n            \n            injectable\n            PasswordConfigService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/services/password-entropy.service.ts\n            \n            injectable\n            PasswordEntropyService\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/services/password-generation.service.ts\n            \n            injectable\n            PasswordGenerationService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/services/password-strength.service.ts\n            \n            injectable\n            PasswordStrengthService\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/services/password.service.ts\n            \n            injectable\n            PasswordService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/slider/slider.component.ts\n            \n            component\n            SliderComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/strength-meter/strength-meter.component.ts\n            \n            component\n            StrengthMeterComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/svg/svg-copy-icon/svg-copy-icon.component.ts\n            \n            component\n            SvgCopyIconComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/svg/svg-right-arrow.component.ts\n            \n            component\n            SvgRightArrowComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/types/password-charset.class.ts\n            \n            class\n            PasswordCharset\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/environments/environment.development.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^17.3.0\n        \n            @angular/common : ^17.3.0\n        \n            @angular/compiler : ^17.3.0\n        \n            @angular/core : ^17.3.0\n        \n            @angular/forms : ^17.3.0\n        \n            @angular/platform-browser : ^17.3.0\n        \n            @angular/platform-browser-dynamic : ^17.3.0\n        \n            @angular/router : ^17.3.0\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.14.3\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Charset   (src/.../charset.enum.ts)\n                        \n                        \n                            PasswordStrength   (src/.../password-strength.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/types/charset.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        Charset\n                    \n                \n                        \n                            \n                                 LOWERCASE\n                            \n                        \n                        \n                            \n                                Value : abcdefghijklmnopqrstuvwxyz\n                            \n                        \n                        \n                            \n                                 UPPERCASE\n                            \n                        \n                        \n                            \n                                Value : ABCDEFGHIJKLMNOPQRSTUVWXYZ\n                            \n                        \n                        \n                            \n                                 DIGITS\n                            \n                        \n                        \n                            \n                                Value : 0123456789\n                            \n                        \n                        \n                            \n                                 SYMBOLS\n                            \n                        \n                        \n                            \n                                Value : !\"#$%&'()*+,-./:;?@[\\]^_`{|}~\n                            \n                        \n            \n        \n\n    src/app/types/password-strength.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        PasswordStrength\n                    \n                \n                        \n                            \n                                 LEVEL_0\n                            \n                        \n                        \n                            \n                                 LEVEL_1\n                            \n                        \n                        \n                            \n                                 LEVEL_2\n                            \n                        \n                        \n                            \n                                 LEVEL_3\n                            \n                        \n                        \n                            \n                                 LEVEL_4\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nFrontend Mentor | Password generator app\nThis is my solution to the Password generator app challenge from Frontend Mentor.\n\nTech Stack\n\nAngular 17\nSass\n\nMain Features\n\nCustom controls (slider and checkboxes)\nWeb Cryptography API\nClipboard API\nUnit and integration testing with Jasmine\nStandalone components\nBash automation (see PR #1)\nGitHub Actions:\nVercel deployments\nCodeQL analysis\n\n\n\nDeveloper Tools\n\nVS Code\nFigma\nGitHub Copilot\n\nLinks\n\nWebsite hosted with Vercel\nSolution\n\nScreenshots\nMobile\n\nAbout Frontend Mentor\nFrontend Mentor challenges help you improve your coding skills by building realistic projects.\nCopyright\n© 2024 Johnny Gérard\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    7 Components\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            environment   (src/.../environment.development.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideRouter(routes),\n    provideAnimations(),\n  ]\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.development.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
