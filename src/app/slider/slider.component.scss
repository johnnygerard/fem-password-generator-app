@use "index" as *;

$track-color: $color-very-dark-gray;
$track-width: 100%;
$track-height: 8px;
$track-border-radius: 0;

$thumb-color: $color-near-white;
$thumb-width: 28px;
$thumb-height: 28px;
$thumb-border-radius: 50%;

$progress-track-color: $color-neon-green;

:host {
  // Center vertically
  display: flex;
  align-items: center;

  width: 100%;
  height: $thumb-height;
}

@include range-input(
  $track-color,
  $track-width,
  $track-height,
  $track-border-radius,
  $thumb-color,
  $thumb-width,
  $thumb-height,
  $thumb-border-radius,
  $progress-track-color
);

// Style the progress track (left side of the thumb)
// Source: https://dev.to/munkacsimark/styled-range-input-a-way-out-of-range-input-nightmare-jeo
input[type="range"] {
  // Firefox
  &::-moz-range-progress {
    height: $track-height;
    background-color: $progress-track-color;
  }

  // WebKit-based browsers
  &::-webkit-slider-runnable-track {
    // --progress-percentage is set dynamically with @HostBinding
    background-image: linear-gradient(
      to right,
      $progress-track-color var(--progress-percentage),
      $track-color var(--progress-percentage)
    );
  }
}

// Increase track hit area to the thumb size
// Firefox does not support this rule because it does not allow ::before on input[type="range"]
// This is a minor issue because Firefox already has a larger hit area than Chrome
input[type="range"] {
  position: relative;

  &::before {
    $extension-size: calc(($thumb-height - $track-height) / 2);

    content: "";
    position: absolute;
    z-index: 1;
    top: -$extension-size;
    bottom: -$extension-size;
    left: -$extension-size;
    right: -$extension-size;
    background: transparent;
  }

  // Ensure thumb is always on top
  &::-webkit-slider-thumb {
    position: relative;
    z-index: 2;
  }
}
